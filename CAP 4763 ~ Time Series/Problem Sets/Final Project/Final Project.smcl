{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets/Final Project/Final Project.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}19 Apr 2021, 20:43:14
{txt}
{com}. import delimited "TS2020_Final_Project_Monthly.txt"
{res}{text}(6 vars, 375 obs)

{com}. rename smu12455400500000001 Count
{res}{txt}
{com}. rename smu12455400500000002 WeekHours
{res}{txt}
{com}. rename smu12455400500000003 HourlyEarnings
{res}{txt}
{com}. rename smu12455400500000011 WeeklyEarnings
{res}{txt}
{com}. rename smu12455400800000001 ServiceCount
{res}{txt}
{com}. 
. 
. label variable Count "Count"
{txt}
{com}. label variable WeekHours "WeekHours"
{txt}
{com}. label variable HourlyEarnings "HourlyEarnings"
{txt}
{com}. label variable WeeklyEarnings "WeeklyEarnings"
{txt}
{com}. label variable ServiceCount "ServiceCount"
{txt}
{com}. 
. 
. gen datec=date(date, "YMD")
{txt}
{com}. gen Date=mofd(datec)
{txt}
{com}. gen month=month(datec)
{txt}
{com}. format Date %tm
{txt}
{com}. tsset Date
{res}{txt}{col 9}time variable:  {res}{col 25}Date, 1990m1 to 2021m3
{txt}{col 17}delta:  {res}1 month
{txt}
{com}. 
. gen withMarchCount = Count
{txt}
{com}. gen withMarchEarnings = WeeklyEarnings
{txt}(252 missing values generated)

{com}. replace Count=. if tin(2021m3,)
{txt}(1 real change made, 1 to missing)

{com}. replace WeeklyEarnings=. if tin(2021m3,)
{txt}(1 real change made, 1 to missing)

{com}. 
. gen lnCount = ln(Count)
{txt}(1 missing value generated)

{com}. gen lnWeekHours = ln(WeekHours)
{txt}(252 missing values generated)

{com}. gen lnHourlyEarnings = ln(HourlyEarnings)
{txt}(252 missing values generated)

{com}. gen lnWeeklyEarnings = ln(WeeklyEarnings)
{txt}(253 missing values generated)

{com}. gen lnServiceCount = ln(ServiceCount)
{txt}
{com}. 
. gen m1=0
{txt}
{com}. replace m1=1 if month==1
{txt}(32 real changes made)

{com}. gen m2=0
{txt}
{com}. replace m2=1 if month==2
{txt}(32 real changes made)

{com}. gen m3=0
{txt}
{com}. replace m3=1 if month==3
{txt}(32 real changes made)

{com}. gen m4=0
{txt}
{com}. replace m4=1 if month==4
{txt}(31 real changes made)

{com}. gen m5=0
{txt}
{com}. replace m5=1 if month==5
{txt}(31 real changes made)

{com}. gen m6=0
{txt}
{com}. replace m6=1 if month==6
{txt}(31 real changes made)

{com}. gen m7=0
{txt}
{com}. replace m7=1 if month==7
{txt}(31 real changes made)

{com}. gen m8=0
{txt}
{com}. replace m8=1 if month==8
{txt}(31 real changes made)

{com}. gen m9=0
{txt}
{com}. replace m9=1 if month==9
{txt}(31 real changes made)

{com}. gen m10=0
{txt}
{com}. replace m10=1 if month==10
{txt}(31 real changes made)

{com}. gen m11=0
{txt}
{com}. replace m11=1 if month==11
{txt}(31 real changes made)

{com}. gen m12=0
{txt}
{com}. replace m12=1 if month==12
{txt}(31 real changes made)

{com}. 
. gen dlnCount=d.lnCount
{txt}(2 missing values generated)

{com}. gen l1dlnCount=l1d.lnCount
{txt}(2 missing values generated)

{com}. gen l2dlnCount=l2d.lnCount
{txt}(3 missing values generated)

{com}. gen l3dlnCount=l3d.lnCount
{txt}(4 missing values generated)

{com}. gen l4dlnCount=l4d.lnCount
{txt}(5 missing values generated)

{com}. gen l5dlnCount=l5d.lnCount
{txt}(6 missing values generated)

{com}. gen l6dlnCount=l6d.lnCount
{txt}(7 missing values generated)

{com}. gen l7dlnCount=l7d.lnCount
{txt}(8 missing values generated)

{com}. gen l8dlnCount=l8d.lnCount
{txt}(9 missing values generated)

{com}. gen l9dlnCount=l9d.lnCount
{txt}(10 missing values generated)

{com}. gen l10dlnCount=l10d.lnCount
{txt}(11 missing values generated)

{com}. gen l11dlnCount=l11d.lnCount
{txt}(12 missing values generated)

{com}. gen l12dlnCount=l12d.lnCount
{txt}(13 missing values generated)

{com}. gen l24dlnCount=l24d.lnCount
{txt}(25 missing values generated)

{com}. gen l36dlnCount=l36d.lnCount
{txt}(37 missing values generated)

{com}. gen l48dlnCount=l48d.lnCount
{txt}(49 missing values generated)

{com}. 
. gen dlnWeekHours=d.lnWeekHours
{txt}(253 missing values generated)

{com}. gen l1dlnWeekHours=l1d.lnWeekHours
{txt}(254 missing values generated)

{com}. gen l2dlnWeekHours=l2d.lnWeekHours
{txt}(255 missing values generated)

{com}. gen l3dlnWeekHours=l3d.lnWeekHours
{txt}(256 missing values generated)

{com}. gen l4dlnWeekHours=l4d.lnWeekHours
{txt}(257 missing values generated)

{com}. gen l5dlnWeekHours=l5d.lnWeekHours
{txt}(258 missing values generated)

{com}. gen l6dlnWeekHours=l6d.lnWeekHours
{txt}(259 missing values generated)

{com}. gen l7dlnWeekHours=l7d.lnWeekHours
{txt}(260 missing values generated)

{com}. gen l8dlnWeekHours=l8d.lnWeekHours
{txt}(261 missing values generated)

{com}. gen l9dlnWeekHours=l9d.lnWeekHours
{txt}(262 missing values generated)

{com}. gen l10dlnWeekHours=l10d.lnWeekHours
{txt}(263 missing values generated)

{com}. gen l11dlnWeekHours=l11d.lnWeekHours
{txt}(264 missing values generated)

{com}. gen l12dlnWeekHours=l12d.lnWeekHours
{txt}(265 missing values generated)

{com}. gen l24dlnWeekHours=l24d.lnWeekHours
{txt}(277 missing values generated)

{com}. gen l36dlnWeekHours=l36d.lnWeekHours
{txt}(289 missing values generated)

{com}. gen l48dlnWeekHours=l48d.lnWeekHours
{txt}(301 missing values generated)

{com}. 
. gen dlnHourlyEarnings=d.lnHourlyEarnings
{txt}(253 missing values generated)

{com}. gen l1dlnHourlyEarnings=l1d.lnHourlyEarnings
{txt}(254 missing values generated)

{com}. gen l2dlnHourlyEarnings=l2d.lnHourlyEarnings
{txt}(255 missing values generated)

{com}. gen l3dlnHourlyEarnings=l3d.lnHourlyEarnings
{txt}(256 missing values generated)

{com}. gen l4dlnHourlyEarnings=l4d.lnHourlyEarnings
{txt}(257 missing values generated)

{com}. gen l5dlnHourlyEarnings=l5d.lnHourlyEarnings
{txt}(258 missing values generated)

{com}. gen l6dlnHourlyEarnings=l6d.lnHourlyEarnings
{txt}(259 missing values generated)

{com}. gen l7dlnHourlyEarnings=l7d.lnHourlyEarnings
{txt}(260 missing values generated)

{com}. gen l8dlnHourlyEarnings=l8d.lnHourlyEarnings
{txt}(261 missing values generated)

{com}. gen l9dlnHourlyEarnings=l9d.lnHourlyEarnings
{txt}(262 missing values generated)

{com}. gen l10dlnHourlyEarnings=l10d.lnHourlyEarnings
{txt}(263 missing values generated)

{com}. gen l11dlnHourlyEarnings=l11d.lnHourlyEarnings
{txt}(264 missing values generated)

{com}. gen l12dlnHourlyEarnings=l12d.lnHourlyEarnings
{txt}(265 missing values generated)

{com}. gen l24dlnHourlyEarnings=l24d.lnHourlyEarnings
{txt}(277 missing values generated)

{com}. gen l36dlnHourlyEarnings=l36d.lnHourlyEarnings
{txt}(289 missing values generated)

{com}. gen l48dlnHourlyEarnings=l48d.lnHourlyEarnings
{txt}(301 missing values generated)

{com}. 
. gen dlnWeeklyEarnings=d.lnWeeklyEarnings
{txt}(254 missing values generated)

{com}. gen l1dlnWeeklyEarnings=l1d.lnWeeklyEarnings
{txt}(254 missing values generated)

{com}. gen l2dlnWeeklyEarnings=l2d.lnWeeklyEarnings
{txt}(255 missing values generated)

{com}. gen l3dlnWeeklyEarnings=l3d.lnWeeklyEarnings
{txt}(256 missing values generated)

{com}. gen l4dlnWeeklyEarnings=l4d.lnWeeklyEarnings
{txt}(257 missing values generated)

{com}. gen l5dlnWeeklyEarnings=l5d.lnWeeklyEarnings
{txt}(258 missing values generated)

{com}. gen l6dlnWeeklyEarnings=l6d.lnWeeklyEarnings
{txt}(259 missing values generated)

{com}. gen l7dlnWeeklyEarnings=l7d.lnWeeklyEarnings
{txt}(260 missing values generated)

{com}. gen l8dlnWeeklyEarnings=l8d.lnWeeklyEarnings
{txt}(261 missing values generated)

{com}. gen l9dlnWeeklyEarnings=l9d.lnWeeklyEarnings
{txt}(262 missing values generated)

{com}. gen l10dlnWeeklyEarnings=l10d.lnWeeklyEarnings
{txt}(263 missing values generated)

{com}. gen l11dlnWeeklyEarnings=l11d.lnWeeklyEarnings
{txt}(264 missing values generated)

{com}. gen l12dlnWeeklyEarnings=l12d.lnWeeklyEarnings
{txt}(265 missing values generated)

{com}. gen l24dlnWeeklyEarnings=l24d.lnWeeklyEarnings
{txt}(277 missing values generated)

{com}. gen l36dlnWeeklyEarnings=l36d.lnWeeklyEarnings
{txt}(289 missing values generated)

{com}. gen l48dlnWeeklyEarnings=l48d.lnWeeklyEarnings
{txt}(301 missing values generated)

{com}. 
. gen dlnServiceCount=d.lnServiceCount
{txt}(1 missing value generated)

{com}. gen l1dlnServiceCount=l1d.lnServiceCount
{txt}(2 missing values generated)

{com}. gen l2dlnServiceCount=l2d.lnServiceCount
{txt}(3 missing values generated)

{com}. gen l3dlnServiceCount=l3d.lnServiceCount
{txt}(4 missing values generated)

{com}. gen l4dlnServiceCount=l4d.lnServiceCount
{txt}(5 missing values generated)

{com}. gen l5dlnServiceCount=l5d.lnServiceCount
{txt}(6 missing values generated)

{com}. gen l6dlnServiceCount=l6d.lnServiceCount
{txt}(7 missing values generated)

{com}. gen l7dlnServiceCount=l7d.lnServiceCount
{txt}(8 missing values generated)

{com}. gen l8dlnServiceCount=l8d.lnServiceCount
{txt}(9 missing values generated)

{com}. gen l9dlnServiceCount=l9d.lnServiceCount
{txt}(10 missing values generated)

{com}. gen l10dlnServiceCount=l10d.lnServiceCount
{txt}(11 missing values generated)

{com}. gen l11dlnServiceCount=l11d.lnServiceCount
{txt}(12 missing values generated)

{com}. gen l12dlnServiceCount=l12d.lnServiceCount
{txt}(13 missing values generated)

{com}. gen l24dlnServiceCount=l24d.lnServiceCount
{txt}(25 missing values generated)

{com}. gen l36dlnServiceCount=l36d.lnServiceCount
{txt}(37 missing values generated)

{com}. gen l48dlnServiceCount=l48d.lnServiceCount
{txt}(49 missing values generated)

{com}. 
. /*
> The project is to forecast the March non-seasonally adjusted estimates of average weekly earnings and total employment for private employers (total private) for a Florida MSA of your choice and write up a professional report on your forecast.
> */
. /* Count and WeeklyEarnings */
. 
. summ Count WeekHours HourlyEarnings WeeklyEarnings ServiceCount

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}Count {c |}{res}        374    14.18556    6.880684        5.3         28
{txt}{space 3}WeekHours {c |}{res}        123    36.88455    3.791817       28.3       45.8
{txt}HourlyEarn~s {c |}{res}        123       19.72    2.903968      15.01       24.6
{txt}WeeklyEarn~s {c |}{res}        122    719.6542    84.57241     503.79      916.1
{txt}ServiceCount {c |}{res}        375    10.43387    5.959179        3.9       22.8
{txt}
{com}. summ lnCount lnWeekHours lnHourlyEarnings lnWeeklyEarnings lnServiceCount

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}lnCount {c |}{res}        374      2.5174    .5398403   1.667707   3.332205
{txt}{space 1}lnWeekHours {c |}{res}        123    3.602488      .10385   3.342862   3.824284
{txt}lnHourlyEa~s {c |}{res}        123    2.970779    .1482819   2.708717   3.202746
{txt}lnWeeklyEa~s {c |}{res}        122    6.571775    .1195694   6.222159   6.820126
{txt}lnServiceC~t {c |}{res}        375    2.172053    .5985689   1.360977    3.12676
{txt}
{com}. 
. ac lnCount, saving(lnCount_ac, replace)
{res}{txt}(file lnCount_ac.gph saved)

{com}. pac lnCount, saving(lnCount_pac, replace)
{res}{txt}(file lnCount_pac.gph saved)

{com}. graph combine lnCount_ac.gph lnCount_pac.gph, saving(lnCount_ac_pac, replace)
{res}{txt}(file lnCount_ac_pac.gph saved)

{com}. graph export "lnCount_ac_pac.png", replace
{txt}(file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets/Final Project/lnCount_ac_pac.png written in PNG format)

{com}. ** Probably need to difference
. 
. ac lnWeeklyEarnings, saving(lnWeeklyEarnings_ac, replace)
{res}{txt}(file lnWeeklyEarnings_ac.gph saved)

{com}. pac lnWeeklyEarnings, saving(lnWeeklyEarnings_pac, replace)
{res}{txt}(file lnWeeklyEarnings_pac.gph saved)

{com}. graph combine lnWeeklyEarnings_ac.gph lnWeeklyEarnings_pac.gph, saving(lnWeeklyEarnings_ac_pac, replace)
{res}{txt}(file lnWeeklyEarnings_ac_pac.gph saved)

{com}. graph export "lnWeeklyEarnings_ac_pac.png", replace
{txt}(file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets/Final Project/lnWeeklyEarnings_ac_pac.png written in PNG format)

{com}. ** Probably need to difference
. 
. *starter models for count
. *I used a pair plot to examine the rise and fall of variables with respect to each other
. reg d.lnCount l(12,24,36,48)d.lnCount // .01637

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       325
{txt}{hline 13}{c +}{hline 34}   F(4, 320)       = {res}    16.54
{txt}       Model {c |} {res} .017539188         4  .004384797   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} .084856979       320  .000265178   {txt}R-squared       ={res}    0.1713
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1609
{txt}       Total {c |} {res} .102396167       324  .000316038   {txt}Root MSE        =   {res} .01628

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   D.lnCount{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnCount {c |}
{space 7}L12D. {c |}{col 14}{res}{space 2} .3609966{col 26}{space 2} .0621085{col 37}{space 1}    5.81{col 46}{space 3}0.000{col 54}{space 4}  .238804{col 67}{space 3} .4831893
{txt}{space 7}L24D. {c |}{col 14}{res}{space 2}  .137848{col 26}{space 2} .0617615{col 37}{space 1}    2.23{col 46}{space 3}0.026{col 54}{space 4}  .016338{col 67}{space 3}  .259358
{txt}{space 7}L36D. {c |}{col 14}{res}{space 2}-.0160136{col 26}{space 2} .0614584{col 37}{space 1}   -0.26{col 46}{space 3}0.795{col 54}{space 4}-.1369272{col 67}{space 3}    .1049
{txt}{space 7}L48D. {c |}{col 14}{res}{space 2} .1265117{col 26}{space 2} .0585322{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .0113551{col 67}{space 3} .2416683
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0017116{col 26}{space 2} .0009853{col 37}{space 1}    1.74{col 46}{space 3}0.083{col 54}{space 4}-.0002269{col 67}{space 3} .0036502
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)144 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs144 = {res}       144
{txt}RWminobs144 = {res}        12
{txt} RWrmse144 = {res}  .0172276
{txt}RWmaxobs132 = {res}       132
{txt}RWminobs132 = {res}        12
{txt} RWrmse132 = {res}  .0172128
{txt}RWmaxobs120 = {res}       120
{txt}RWminobs120 = {res}        12
{txt} RWrmse120 = {res} .01721825
{txt}RWmaxobs108 = {res}       108
{txt}RWminobs108 = {res}        12
{txt} RWrmse108 = {res} .01723674
{txt}RWmaxobs96 = {res}        96
{txt}RWminobs96 = {res}        12
{txt}  RWrmse96 = {res} .01722006
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}        12
{txt}  RWrmse84 = {res} .01726063
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}        12
{txt}  RWrmse72 = {res} .01722377
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}        12
{txt}  RWrmse60 = {res}  .0173443
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}        12
{txt}  RWrmse48 = {res} .01755803
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}        12
{txt}  RWrmse36 = {res} .01805924
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}        12
{txt}  RWrmse24 = {res}  .0185871
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}        12
{txt}  RWrmse12 = {res} .02320505
{txt}
{com}. /*
> RWmaxobs132 =        132
> RWminobs132 =         12
> RWrmse132 =   .0172128
> */
. 
. reg d.lnCount l(5,12,24,36,48)d.lnCount l(5)d.lnWeekHours m5 // .01711

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       116
{txt}{hline 13}{c +}{hline 34}   F(7, 108)       = {res}     5.94
{txt}       Model {c |} {res} .012171566         7  .001738795   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  .03162877       108  .000292859   {txt}R-squared       ={res}    0.2779
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2311
{txt}       Total {c |} {res} .043800336       115  .000380872   {txt}Root MSE        =   {res} .01711

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   D.lnCount{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnCount {c |}
{space 8}L5D. {c |}{col 14}{res}{space 2}-.1231921{col 26}{space 2} .0845717{col 37}{space 1}   -1.46{col 46}{space 3}0.148{col 54}{space 4} -.290828{col 67}{space 3} .0444438
{txt}{space 7}L12D. {c |}{col 14}{res}{space 2} .5811114{col 26}{space 2} .1685831{col 37}{space 1}    3.45{col 46}{space 3}0.001{col 54}{space 4} .2469504{col 67}{space 3} .9152724
{txt}{space 7}L24D. {c |}{col 14}{res}{space 2}-.1196017{col 26}{space 2} .1627467{col 37}{space 1}   -0.73{col 46}{space 3}0.464{col 54}{space 4}-.4421938{col 67}{space 3} .2029904
{txt}{space 7}L36D. {c |}{col 14}{res}{space 2} .2532303{col 26}{space 2} .1742525{col 37}{space 1}    1.45{col 46}{space 3}0.149{col 54}{space 4}-.0921684{col 67}{space 3} .5986291
{txt}{space 7}L48D. {c |}{col 14}{res}{space 2} .1341638{col 26}{space 2} .1858633{col 37}{space 1}    0.72{col 46}{space 3}0.472{col 54}{space 4}-.2342495{col 67}{space 3} .5025771
{txt}{space 12} {c |}
{space 1}lnWeekHours {c |}
{space 8}L5D. {c |}{col 14}{res}{space 2} .0170123{col 26}{space 2} .0364906{col 37}{space 1}    0.47{col 46}{space 3}0.642{col 54}{space 4}-.0553184{col 67}{space 3}  .089343
{txt}{space 12} {c |}
{space 10}m5 {c |}{col 14}{res}{space 2} .0067588{col 26}{space 2} .0061605{col 37}{space 1}    1.10{col 46}{space 3}0.275{col 54}{space 4}-.0054524{col 67}{space 3} .0189699
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0004279{col 26}{space 2} .0018229{col 37}{space 1}    0.23{col 46}{space 3}0.815{col 54}{space 4}-.0031854{col 67}{space 3} .0040412
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)84 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}        23
{txt}  RWrmse84 = {res} .01950911
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}        23
{txt}  RWrmse72 = {res} .01949719
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}        23
{txt}  RWrmse60 = {res}  .0199438
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}        23
{txt}  RWrmse48 = {res} .02035982
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}        23
{txt}  RWrmse36 = {res} .02138785
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}        23
{txt}  RWrmse24 = {res} .02268585
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}        12
{txt}  RWrmse12 = {res} .05004898
{txt}
{com}. /*
> RWmaxobs84 =         84
> RWminobs84 =         23
> RWrmse84 =  .01950911
> */
. 
. quietly gsreg dlnCount l1dlnCount l2dlnCount l3dlnCount l4dlnCount l5dlnCount l6dlnCount ///
>         l7dlnCount l8dlnCount l9dlnCount l10dlnCount l11dlnCount l12dlnCount ///
>         l24dlnCount l36dlnCount l48dlnCount ///
>         if tin(1990m1,2021m1), ///
>         ncomb(1,12) aic outsample(24) fix(m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 m12) ///
>         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnCount) replace
{txt}
{com}.         
. *gsreg suggestions
. reg d.lnCount l12d.lnCount m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       361
{txt}{hline 13}{c +}{hline 34}   F(12, 348)      = {res}     6.91
{txt}       Model {c |} {res} .022616974        12  .001884748   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} .094871179       348  .000272618   {txt}R-squared       ={res}    0.1925
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1647
{txt}       Total {c |} {res} .117488153       360  .000326356   {txt}Root MSE        =   {res} .01651

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   D.lnCount{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnCount {c |}
{space 7}L12D. {c |}{col 14}{res}{space 2} .1748571{col 26}{space 2} .0594184{col 37}{space 1}    2.94{col 46}{space 3}0.003{col 54}{space 4} .0579928{col 67}{space 3} .2917215
{txt}{space 12} {c |}
{space 10}m1 {c |}{col 14}{res}{space 2}-.0099477{col 26}{space 2} .0043004{col 37}{space 1}   -2.31{col 46}{space 3}0.021{col 54}{space 4}-.0184056{col 67}{space 3}-.0014897
{txt}{space 10}m2 {c |}{col 14}{res}{space 2} .0009939{col 26}{space 2} .0042297{col 37}{space 1}    0.23{col 46}{space 3}0.814{col 54}{space 4}-.0073251{col 67}{space 3} .0093129
{txt}{space 10}m3 {c |}{col 14}{res}{space 2} .0030247{col 26}{space 2} .0042759{col 37}{space 1}    0.71{col 46}{space 3}0.480{col 54}{space 4}-.0053851{col 67}{space 3} .0114345
{txt}{space 10}m4 {c |}{col 14}{res}{space 2}-.0071933{col 26}{space 2} .0042648{col 37}{space 1}   -1.69{col 46}{space 3}0.093{col 54}{space 4}-.0155814{col 67}{space 3} .0011948
{txt}{space 10}m5 {c |}{col 14}{res}{space 2}-.0098194{col 26}{space 2} .0043178{col 37}{space 1}   -2.27{col 46}{space 3}0.024{col 54}{space 4}-.0183118{col 67}{space 3}-.0013271
{txt}{space 10}m6 {c |}{col 14}{res}{space 2}-.0133285{col 26}{space 2} .0043874{col 37}{space 1}   -3.04{col 46}{space 3}0.003{col 54}{space 4}-.0219576{col 67}{space 3}-.0046994
{txt}{space 10}m7 {c |}{col 14}{res}{space 2}-.0091828{col 26}{space 2} .0042967{col 37}{space 1}   -2.14{col 46}{space 3}0.033{col 54}{space 4}-.0176336{col 67}{space 3} -.000732
{txt}{space 10}m8 {c |}{col 14}{res}{space 2}-.0017998{col 26}{space 2} .0042632{col 37}{space 1}   -0.42{col 46}{space 3}0.673{col 54}{space 4}-.0101846{col 67}{space 3}  .006585
{txt}{space 10}m9 {c |}{col 14}{res}{space 2} -.006737{col 26}{space 2} .0042824{col 37}{space 1}   -1.57{col 46}{space 3}0.117{col 54}{space 4}-.0151597{col 67}{space 3} .0016858
{txt}{space 9}m10 {c |}{col 14}{res}{space 2} .0062149{col 26}{space 2} .0042795{col 37}{space 1}    1.45{col 46}{space 3}0.147{col 54}{space 4}-.0022021{col 67}{space 3} .0146319
{txt}{space 9}m11 {c |}{col 14}{res}{space 2} .0042124{col 26}{space 2} .0042811{col 37}{space 1}    0.98{col 46}{space 3}0.326{col 54}{space 4}-.0042078{col 67}{space 3} .0126325
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0072199{col 26}{space 2} .0030452{col 37}{space 1}    2.37{col 46}{space 3}0.018{col 54}{space 4} .0012306{col 67}{space 3} .0132093
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)144 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs144 = {res}       144
{txt}RWminobs144 = {res}        12
{txt} RWrmse144 = {res} .01824906
{txt}RWmaxobs132 = {res}       132
{txt}RWminobs132 = {res}        12
{txt} RWrmse132 = {res} .01832173
{txt}RWmaxobs120 = {res}       120
{txt}RWminobs120 = {res}        12
{txt} RWrmse120 = {res} .01833557
{txt}RWmaxobs108 = {res}       108
{txt}RWminobs108 = {res}        12
{txt} RWrmse108 = {res} .01841089
{txt}RWmaxobs96 = {res}        96
{txt}RWminobs96 = {res}        12
{txt}  RWrmse96 = {res} .01836974
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}        12
{txt}  RWrmse84 = {res} .01849267
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}        12
{txt}  RWrmse72 = {res} .01861349
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}        12
{txt}  RWrmse60 = {res} .01911515
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}        12
{txt}  RWrmse48 = {res} .01922268
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}        12
{txt}  RWrmse36 = {res} .01991683
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}        12
{txt}  RWrmse24 = {res} .02022186
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}        12
{txt}  RWrmse12 = {res} .02009249
{txt}
{com}. /*
> RWmaxobs144 =        144
> RWminobs144 =         12
> RWrmse144 =  .01824906
> */
. 
. reg d.lnCount l(12,36)d.lnCount m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       337
{txt}{hline 13}{c +}{hline 34}   F(13, 323)      = {res}     5.68
{txt}       Model {c |} {res} .019946057        13  .001534312   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} .087185203       323  .000269923   {txt}R-squared       ={res}    0.1862
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1534
{txt}       Total {c |} {res} .107131259       336  .000318843   {txt}Root MSE        =   {res} .01643

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   D.lnCount{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnCount {c |}
{space 7}L12D. {c |}{col 14}{res}{space 2} .1849403{col 26}{space 2} .0636401{col 37}{space 1}    2.91{col 46}{space 3}0.004{col 54}{space 4}  .059739{col 67}{space 3} .3101417
{txt}{space 7}L36D. {c |}{col 14}{res}{space 2} -.049332{col 26}{space 2} .0606582{col 37}{space 1}   -0.81{col 46}{space 3}0.417{col 54}{space 4}-.1686671{col 67}{space 3} .0700031
{txt}{space 12} {c |}
{space 10}m1 {c |}{col 14}{res}{space 2}-.0073418{col 26}{space 2} .0044769{col 37}{space 1}   -1.64{col 46}{space 3}0.102{col 54}{space 4}-.0161493{col 67}{space 3} .0014658
{txt}{space 10}m2 {c |}{col 14}{res}{space 2} .0022711{col 26}{space 2} .0043559{col 37}{space 1}    0.52{col 46}{space 3}0.602{col 54}{space 4}-.0062984{col 67}{space 3} .0108407
{txt}{space 10}m3 {c |}{col 14}{res}{space 2} .0043593{col 26}{space 2}  .004416{col 37}{space 1}    0.99{col 46}{space 3}0.324{col 54}{space 4}-.0043285{col 67}{space 3} .0130471
{txt}{space 10}m4 {c |}{col 14}{res}{space 2}-.0065438{col 26}{space 2} .0043922{col 37}{space 1}   -1.49{col 46}{space 3}0.137{col 54}{space 4}-.0151847{col 67}{space 3}  .002097
{txt}{space 10}m5 {c |}{col 14}{res}{space 2}-.0089215{col 26}{space 2} .0045194{col 37}{space 1}   -1.97{col 46}{space 3}0.049{col 54}{space 4}-.0178126{col 67}{space 3}-.0000304
{txt}{space 10}m6 {c |}{col 14}{res}{space 2}-.0133453{col 26}{space 2} .0046241{col 37}{space 1}   -2.89{col 46}{space 3}0.004{col 54}{space 4}-.0224425{col 67}{space 3} -.004248
{txt}{space 10}m7 {c |}{col 14}{res}{space 2}-.0085154{col 26}{space 2}  .004457{col 37}{space 1}   -1.91{col 46}{space 3}0.057{col 54}{space 4}-.0172839{col 67}{space 3} .0002531
{txt}{space 10}m8 {c |}{col 14}{res}{space 2}-.0004554{col 26}{space 2}  .004392{col 37}{space 1}   -0.10{col 46}{space 3}0.917{col 54}{space 4}-.0090959{col 67}{space 3} .0081852
{txt}{space 10}m9 {c |}{col 14}{res}{space 2}-.0056625{col 26}{space 2} .0044299{col 37}{space 1}   -1.28{col 46}{space 3}0.202{col 54}{space 4}-.0143775{col 67}{space 3} .0030526
{txt}{space 9}m10 {c |}{col 14}{res}{space 2} .0071688{col 26}{space 2} .0044386{col 37}{space 1}    1.62{col 46}{space 3}0.107{col 54}{space 4}-.0015635{col 67}{space 3} .0159011
{txt}{space 9}m11 {c |}{col 14}{res}{space 2} .0042074{col 26}{space 2} .0044259{col 37}{space 1}    0.95{col 46}{space 3}0.343{col 54}{space 4}-.0044998{col 67}{space 3} .0129146
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0067355{col 26}{space 2} .0031722{col 37}{space 1}    2.12{col 46}{space 3}0.034{col 54}{space 4} .0004948{col 67}{space 3} .0129762
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)144 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs144 = {res}       144
{txt}RWminobs144 = {res}        12
{txt} RWrmse144 = {res} .01777071
{txt}RWmaxobs132 = {res}       132
{txt}RWminobs132 = {res}        12
{txt} RWrmse132 = {res} .01782557
{txt}RWmaxobs120 = {res}       120
{txt}RWminobs120 = {res}        12
{txt} RWrmse120 = {res} .01785253
{txt}RWmaxobs108 = {res}       108
{txt}RWminobs108 = {res}        12
{txt} RWrmse108 = {res} .01794692
{txt}RWmaxobs96 = {res}        96
{txt}RWminobs96 = {res}        12
{txt}  RWrmse96 = {res} .01793358
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}        12
{txt}  RWrmse84 = {res} .01803355
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}        12
{txt}  RWrmse72 = {res} .01807408
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}        12
{txt}  RWrmse60 = {res} .01843535
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}        12
{txt}  RWrmse48 = {res} .01835092
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}        12
{txt}  RWrmse36 = {res} .01863303
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}        12
{txt}  RWrmse24 = {res}  .0196745
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}        12
{txt}  RWrmse12 = {res} .01880291
{txt}
{com}. /*
> RWmaxobs144 =        144
> RWminobs144 =         12
> RWrmse144 =  .01777071
> */
.         
. reg d.lnCount l4d.lnWeekHours l9d.lnWeekHours l8d.lnHourlyEarnings m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       112
{txt}{hline 13}{c +}{hline 34}   F(14, 97)       = {res}     3.24
{txt}       Model {c |} {res} .013917393        14    .0009941   {txt}Prob > F        ={res}    0.0003
{txt}    Residual {c |} {res} .029798432        97    .0003072   {txt}R-squared       ={res}    0.3184
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.2200
{txt}       Total {c |} {res} .043715825       111  .000393836   {txt}Root MSE        =   {res} .01753

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}       D.lnCount{col 18}{c |}      Coef.{col 30}   Std. Err.{col 42}      t{col 50}   P>|t|{col 58}     [95% Con{col 71}f. Interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnWeekHours {c |}
{space 12}L4D. {c |}{col 18}{res}{space 2}-.0013847{col 30}{space 2} .0384012{col 41}{space 1}   -0.04{col 50}{space 3}0.971{col 58}{space 4}-.0776005{col 71}{space 3}  .074831
{txt}{space 12}L9D. {c |}{col 18}{res}{space 2} .0397686{col 30}{space 2} .0385964{col 41}{space 1}    1.03{col 50}{space 3}0.305{col 58}{space 4}-.0368346{col 71}{space 3} .1163718
{txt}{space 16} {c |}
lnHourlyEarnings {c |}
{space 12}L8D. {c |}{col 18}{res}{space 2} -.039029{col 30}{space 2} .0414024{col 41}{space 1}   -0.94{col 50}{space 3}0.348{col 58}{space 4}-.1212014{col 71}{space 3} .0431433
{txt}{space 16} {c |}
{space 14}m1 {c |}{col 18}{res}{space 2}-.0097045{col 30}{space 2} .0078517{col 41}{space 1}   -1.24{col 50}{space 3}0.219{col 58}{space 4}-.0252879{col 71}{space 3} .0058789
{txt}{space 14}m2 {c |}{col 18}{res}{space 2} .0000949{col 30}{space 2} .0079445{col 41}{space 1}    0.01{col 50}{space 3}0.990{col 58}{space 4}-.0156727{col 71}{space 3} .0158626
{txt}{space 14}m3 {c |}{col 18}{res}{space 2} -.004712{col 30}{space 2} .0083585{col 41}{space 1}   -0.56{col 50}{space 3}0.574{col 58}{space 4}-.0213013{col 71}{space 3} .0118773
{txt}{space 14}m4 {c |}{col 18}{res}{space 2}-.0273667{col 30}{space 2} .0081729{col 41}{space 1}   -3.35{col 50}{space 3}0.001{col 58}{space 4}-.0435876{col 71}{space 3}-.0111459
{txt}{space 14}m5 {c |}{col 18}{res}{space 2}-.0076836{col 30}{space 2} .0081259{col 41}{space 1}   -0.95{col 50}{space 3}0.347{col 58}{space 4}-.0238112{col 71}{space 3}  .008444
{txt}{space 14}m6 {c |}{col 18}{res}{space 2} -.020254{col 30}{space 2} .0081465{col 41}{space 1}   -2.49{col 50}{space 3}0.015{col 58}{space 4}-.0364227{col 71}{space 3}-.0040854
{txt}{space 14}m7 {c |}{col 18}{res}{space 2}-.0130812{col 30}{space 2} .0081852{col 41}{space 1}   -1.60{col 50}{space 3}0.113{col 58}{space 4}-.0293265{col 71}{space 3} .0031642
{txt}{space 14}m8 {c |}{col 18}{res}{space 2} .0041701{col 30}{space 2} .0081051{col 41}{space 1}    0.51{col 50}{space 3}0.608{col 58}{space 4}-.0119164{col 71}{space 3} .0202565
{txt}{space 14}m9 {c |}{col 18}{res}{space 2}-.0089171{col 30}{space 2} .0082764{col 41}{space 1}   -1.08{col 50}{space 3}0.284{col 58}{space 4}-.0253435{col 71}{space 3} .0075093
{txt}{space 13}m10 {c |}{col 18}{res}{space 2} .0153608{col 30}{space 2} .0081153{col 41}{space 1}    1.89{col 50}{space 3}0.061{col 58}{space 4}-.0007459{col 71}{space 3} .0314674
{txt}{space 13}m11 {c |}{col 18}{res}{space 2} .0040463{col 30}{space 2} .0079619{col 41}{space 1}    0.51{col 50}{space 3}0.612{col 58}{space 4}-.0117559{col 71}{space 3} .0198485
{txt}{space 11}_cons {c |}{col 18}{res}{space 2} .0094122{col 30}{space 2} .0056462{col 41}{space 1}    1.67{col 50}{space 3}0.099{col 58}{space 4}-.0017939{col 71}{space 3} .0206183
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)84 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}         2
{txt}  RWrmse84 = {res} .01847546
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}         2
{txt}  RWrmse72 = {res} .01855448
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}         2
{txt}  RWrmse60 = {res} .01850723
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}         2
{txt}  RWrmse48 = {res} .01850217
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}         2
{txt}  RWrmse36 = {res} .01942535
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}         2
{txt}  RWrmse24 = {res} .02208272
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}         2
{txt}  RWrmse12 = {res}  .0176238
{txt}
{com}. /*
> RWmaxobs12 =         12
> RWminobs12 =          2
> RWrmse12 =   .0176238
> */
. 
. scalar rwrmse = .0172128
{txt}
{com}. reg d.lnCount l(12,24,36,48)d.lnCount if tin(,2021m2)

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       325
{txt}{hline 13}{c +}{hline 34}   F(4, 320)       = {res}    16.54
{txt}       Model {c |} {res} .017539188         4  .004384797   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} .084856979       320  .000265178   {txt}R-squared       ={res}    0.1713
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1609
{txt}       Total {c |} {res} .102396167       324  .000316038   {txt}Root MSE        =   {res} .01628

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   D.lnCount{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnCount {c |}
{space 7}L12D. {c |}{col 14}{res}{space 2} .3609966{col 26}{space 2} .0621085{col 37}{space 1}    5.81{col 46}{space 3}0.000{col 54}{space 4}  .238804{col 67}{space 3} .4831893
{txt}{space 7}L24D. {c |}{col 14}{res}{space 2}  .137848{col 26}{space 2} .0617615{col 37}{space 1}    2.23{col 46}{space 3}0.026{col 54}{space 4}  .016338{col 67}{space 3}  .259358
{txt}{space 7}L36D. {c |}{col 14}{res}{space 2}-.0160136{col 26}{space 2} .0614584{col 37}{space 1}   -0.26{col 46}{space 3}0.795{col 54}{space 4}-.1369272{col 67}{space 3}    .1049
{txt}{space 7}L48D. {c |}{col 14}{res}{space 2} .1265117{col 26}{space 2} .0585322{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .0113551{col 67}{space 3} .2416683
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0017116{col 26}{space 2} .0009853{col 37}{space 1}    1.74{col 46}{space 3}0.083{col 54}{space 4}-.0002269{col 67}{space 3} .0036502
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. predict pd
{txt}(option {bf:xb} assumed; fitted values)
(49 missing values generated)

{com}. gen pflcount=exp((rwrmse^2)/2)*exp(l.lnCount+pd) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen ub1=exp((rwrmse^2)/2)*exp(l.lnCount+pd+1*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen lb1=exp((rwrmse^2)/2)*exp(l.lnCount+pd-1*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen ub2=exp((rwrmse^2)/2)*exp(l.lnCount+pd+2*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen lb2=exp((rwrmse^2)/2)*exp(l.lnCount+pd-2*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen ub3=exp((rwrmse^2)/2)*exp(l.lnCount+pd+3*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen lb3=exp((rwrmse^2)/2)*exp(l.lnCount+pd-3*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. drop pd
{txt}
{com}. 
. replace pflcount=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace ub1=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace ub2=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace ub3=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace lb1=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace lb2=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace lb3=Count if Date==tm(2021m2)
{txt}(1 real change made)

{com}. 
. twoway (tsrline ub3 ub2 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
>         (tsrline ub2 ub1 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
>         (tsrline ub1 pflcount if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
>         (tsrline pflcount lb1 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
>         (tsrline lb1 lb2 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
>         (tsrline lb2 lb3 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
>         (tsline Count pflcount if tin(2020m3,2021m3) , ///
>         lcolor(gs12 teal) lwidth(medthick medthick) ///
>         lpattern(solid longdash)) ///
>         (scatter withMarchCount Date if tin(2021m3,)), scheme(s1mono) legend(off)
{res}{txt}
{com}. graph export "CountFan.png", replace
{txt}(file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets/Final Project/CountFan.png written in PNG format)

{com}.         
. /*----------------------------------------------------------------------------*/
.         
. *starter models for weekly earnings
. reg d.lnWeeklyEarnings l1d.lnWeekHours ld.lnHourlyEarnings

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       120
{txt}{hline 13}{c +}{hline 34}   F(2, 117)       = {res}     1.48
{txt}       Model {c |} {res}   .0071986         2    .0035993   {txt}Prob > F        ={res}    0.2316
{txt}    Residual {c |} {res} .284290844       117  .002429836   {txt}R-squared       ={res}    0.0247
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0080
{txt}       Total {c |} {res} .291489443       119  .002449491   {txt}Root MSE        =   {res} .04929

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}D.              {col 18}{c |}
{col 1}lnWeeklyEarnings{col 18}{c |}      Coef.{col 30}   Std. Err.{col 42}      t{col 50}   P>|t|{col 58}     [95% Con{col 71}f. Interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}lnWeekHours {c |}
{space 13}LD. {c |}{col 18}{res}{space 2}-.1334776{col 30}{space 2} .1058563{col 41}{space 1}   -1.26{col 50}{space 3}0.210{col 58}{space 4}-.3431204{col 71}{space 3} .0761651
{txt}{space 16} {c |}
lnHourlyEarnings {c |}
{space 13}LD. {c |}{col 18}{res}{space 2} .0746807{col 30}{space 2} .1166933{col 41}{space 1}    0.64{col 50}{space 3}0.523{col 58}{space 4}-.1564244{col 71}{space 3} .3057857
{txt}{space 16} {c |}
{space 11}_cons {c |}{col 18}{res}{space 2} .0015108{col 30}{space 2} .0045071{col 41}{space 1}    0.34{col 50}{space 3}0.738{col 58}{space 4}-.0074152{col 71}{space 3} .0104368
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)84 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}         2
{txt}  RWrmse84 = {res} .06183191
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}         2
{txt}  RWrmse72 = {res} .06162109
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}         2
{txt}  RWrmse60 = {res} .06144232
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}         2
{txt}  RWrmse48 = {res}  .0618403
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}         2
{txt}  RWrmse36 = {res} .06201409
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}         2
{txt}  RWrmse24 = {res} .06224974
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}         2
{txt}  RWrmse12 = {res} .06583082
{txt}
{com}. /*
> RWmaxobs60 =         60
> RWminobs60 =          2
> RWrmse60 =  .06145693
> */
. 
. quietly gsreg dlnWeeklyEarnings l1dlnWeeklyEarnings l2dlnWeeklyEarnings l3dlnWeeklyEarnings ///
>         l4dlnWeeklyEarnings l5dlnWeeklyEarnings l6dlnWeeklyEarnings ///
>         l7dlnWeeklyEarnings l8dlnWeeklyEarnings l9dlnWeeklyEarnings l10dlnWeeklyEarnings ///
>         l11dlnWeeklyEarnings l12dlnWeeklyEarnings ///
>         l24dlnWeeklyEarnings l36dlnWeeklyEarnings ///
>         if tin(2011m1,2021m1), ///
>         ncomb(1,12) aic outsample(24) ///
>         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnWeeklyEarnings) replace
{txt}
{com}.         
. reg d.lnWeeklyEarnings l3d.lnWeeklyEarnings l5d.lnWeeklyEarnings m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       116
{txt}{hline 13}{c +}{hline 34}   F(13, 102)      = {res}     2.16
{txt}       Model {c |} {res} .061304493        13   .00471573   {txt}Prob > F        ={res}    0.0166
{txt}    Residual {c |} {res} .222983103       102  .002186109   {txt}R-squared       ={res}    0.2156
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1157
{txt}       Total {c |} {res} .284287596       115  .002472066   {txt}Root MSE        =   {res} .04676

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}D.              {col 18}{c |}
{col 1}lnWeeklyEarnings{col 18}{c |}      Coef.{col 30}   Std. Err.{col 42}      t{col 50}   P>|t|{col 58}     [95% Con{col 71}f. Interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
lnWeeklyEarnings {c |}
{space 12}L3D. {c |}{col 18}{res}{space 2}-.2267216{col 30}{space 2} .0950679{col 41}{space 1}   -2.38{col 50}{space 3}0.019{col 58}{space 4}-.4152883{col 71}{space 3}-.0381549
{txt}{space 12}L5D. {c |}{col 18}{res}{space 2}-.1621197{col 30}{space 2}  .095104{col 41}{space 1}   -1.70{col 50}{space 3}0.091{col 58}{space 4} -.350758{col 71}{space 3} .0265186
{txt}{space 16} {c |}
{space 14}m1 {c |}{col 18}{res}{space 2} -.013308{col 30}{space 2} .0213233{col 41}{space 1}   -0.62{col 50}{space 3}0.534{col 58}{space 4}-.0556027{col 71}{space 3} .0289866
{txt}{space 14}m2 {c |}{col 18}{res}{space 2}  .020775{col 30}{space 2} .0212478{col 41}{space 1}    0.98{col 50}{space 3}0.331{col 58}{space 4}  -.02137{col 71}{space 3}   .06292
{txt}{space 14}m3 {c |}{col 18}{res}{space 2}-.0123903{col 30}{space 2} .0220875{col 41}{space 1}   -0.56{col 50}{space 3}0.576{col 58}{space 4}-.0562008{col 71}{space 3} .0314201
{txt}{space 14}m4 {c |}{col 18}{res}{space 2} .0105198{col 30}{space 2} .0219037{col 41}{space 1}    0.48{col 50}{space 3}0.632{col 58}{space 4}-.0329261{col 71}{space 3} .0539657
{txt}{space 14}m5 {c |}{col 18}{res}{space 2} .0377285{col 30}{space 2} .0216445{col 41}{space 1}    1.74{col 50}{space 3}0.084{col 58}{space 4}-.0052032{col 71}{space 3} .0806602
{txt}{space 14}m6 {c |}{col 18}{res}{space 2} .0272631{col 30}{space 2} .0216181{col 41}{space 1}    1.26{col 50}{space 3}0.210{col 58}{space 4}-.0156164{col 71}{space 3} .0701426
{txt}{space 14}m7 {c |}{col 18}{res}{space 2}-.0220653{col 30}{space 2} .0214504{col 41}{space 1}   -1.03{col 50}{space 3}0.306{col 58}{space 4} -.064612{col 71}{space 3} .0204813
{txt}{space 14}m8 {c |}{col 18}{res}{space 2} .0152172{col 30}{space 2} .0210597{col 41}{space 1}    0.72{col 50}{space 3}0.472{col 58}{space 4}-.0265547{col 71}{space 3} .0569891
{txt}{space 14}m9 {c |}{col 18}{res}{space 2} .0201901{col 30}{space 2} .0215988{col 41}{space 1}    0.93{col 50}{space 3}0.352{col 58}{space 4}-.0226509{col 71}{space 3} .0630312
{txt}{space 13}m10 {c |}{col 18}{res}{space 2} .0207722{col 30}{space 2}  .021844{col 41}{space 1}    0.95{col 50}{space 3}0.344{col 58}{space 4}-.0225553{col 71}{space 3} .0640997
{txt}{space 13}m11 {c |}{col 18}{res}{space 2} .0084712{col 30}{space 2} .0217091{col 41}{space 1}    0.39{col 50}{space 3}0.697{col 58}{space 4}-.0345888{col 71}{space 3} .0515312
{txt}{space 11}_cons {c |}{col 18}{res}{space 2}-.0073031{col 30}{space 2} .0151547{col 41}{space 1}   -0.48{col 50}{space 3}0.631{col 58}{space 4}-.0373625{col 71}{space 3} .0227563
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)84 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}         2
{txt}  RWrmse84 = {res} .06011868
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}         2
{txt}  RWrmse72 = {res} .06057642
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}         2
{txt}  RWrmse60 = {res} .06071208
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}         2
{txt}  RWrmse48 = {res} .06042055
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}         2
{txt}  RWrmse36 = {res} .06125152
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}         2
{txt}  RWrmse24 = {res} .06537943
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}         2
{txt}  RWrmse12 = {res}  .0702019
{txt}
{com}. /*
> RWmaxobs84 =         84
> RWminobs84 =          2
> RWrmse84 =  .06004448
> */
. 
. reg d.lnWeeklyEarnings l3d.lnWeeklyEarnings l5d.lnWeeklyEarnings l7d.lnWeeklyEarnings

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       114
{txt}{hline 13}{c +}{hline 34}   F(3, 110)       = {res}     3.85
{txt}       Model {c |} {res} .026396014         3  .008798671   {txt}Prob > F        ={res}    0.0115
{txt}    Residual {c |} {res} .251283445       110  .002284395   {txt}R-squared       ={res}    0.0951
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0704
{txt}       Total {c |} {res} .277679459       113   .00245734   {txt}Root MSE        =   {res}  .0478

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}D.              {col 18}{c |}
{col 1}lnWeeklyEarnings{col 18}{c |}      Coef.{col 30}   Std. Err.{col 42}      t{col 50}   P>|t|{col 58}     [95% Con{col 71}f. Interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
lnWeeklyEarnings {c |}
{space 12}L3D. {c |}{col 18}{res}{space 2}-.2408947{col 30}{space 2} .0906673{col 41}{space 1}   -2.66{col 50}{space 3}0.009{col 58}{space 4}-.4205761{col 71}{space 3}-.0612133
{txt}{space 12}L5D. {c |}{col 18}{res}{space 2}-.1892527{col 30}{space 2} .0903206{col 41}{space 1}   -2.10{col 50}{space 3}0.038{col 58}{space 4}-.3682468{col 71}{space 3}-.0102585
{txt}{space 12}L7D. {c |}{col 18}{res}{space 2} .0639647{col 30}{space 2} .0913902{col 41}{space 1}    0.70{col 50}{space 3}0.485{col 58}{space 4}-.1171492{col 71}{space 3} .2450786
{txt}{space 16} {c |}
{space 11}_cons {c |}{col 18}{res}{space 2} .0025724{col 30}{space 2} .0044848{col 41}{space 1}    0.57{col 50}{space 3}0.567{col 58}{space 4}-.0063154{col 71}{space 3} .0114602
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. scalar drop _all
{txt}
{com}. quietly forval w=12(12)84 {c -(}
{txt}
{com}. scalar list
{txt}RWmaxobs84 = {res}        84
{txt}RWminobs84 = {res}         2
{txt}  RWrmse84 = {res} .05259823
{txt}RWmaxobs72 = {res}        72
{txt}RWminobs72 = {res}         2
{txt}  RWrmse72 = {res} .05283772
{txt}RWmaxobs60 = {res}        60
{txt}RWminobs60 = {res}         2
{txt}  RWrmse60 = {res} .05314168
{txt}RWmaxobs48 = {res}        48
{txt}RWminobs48 = {res}         2
{txt}  RWrmse48 = {res}  .0530381
{txt}RWmaxobs36 = {res}        36
{txt}RWminobs36 = {res}         2
{txt}  RWrmse36 = {res} .05353125
{txt}RWmaxobs24 = {res}        24
{txt}RWminobs24 = {res}         2
{txt}  RWrmse24 = {res} .05282122
{txt}RWmaxobs12 = {res}        12
{txt}RWminobs12 = {res}         2
{txt}  RWrmse12 = {res} .06036464
{txt}
{com}. /*
> RWmaxobs84 =         84
> RWminobs84 =          2
> RWrmse84 =  .05250414
> */
. 
. drop pflcount ub1 ub2 ub3 lb1 lb2 lb3
{txt}
{com}. 
. scalar rwrmse = .05250414
{txt}
{com}. reg d.lnWeeklyEarnings l(3,5,7)d.lnWeeklyEarnings if tin(,2021m2)

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       114
{txt}{hline 13}{c +}{hline 34}   F(3, 110)       = {res}     3.85
{txt}       Model {c |} {res} .026396014         3  .008798671   {txt}Prob > F        ={res}    0.0115
{txt}    Residual {c |} {res} .251283445       110  .002284395   {txt}R-squared       ={res}    0.0951
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0704
{txt}       Total {c |} {res} .277679459       113   .00245734   {txt}Root MSE        =   {res}  .0478

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}D.              {col 18}{c |}
{col 1}lnWeeklyEarnings{col 18}{c |}      Coef.{col 30}   Std. Err.{col 42}      t{col 50}   P>|t|{col 58}     [95% Con{col 71}f. Interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
lnWeeklyEarnings {c |}
{space 12}L3D. {c |}{col 18}{res}{space 2}-.2408947{col 30}{space 2} .0906673{col 41}{space 1}   -2.66{col 50}{space 3}0.009{col 58}{space 4}-.4205761{col 71}{space 3}-.0612133
{txt}{space 12}L5D. {c |}{col 18}{res}{space 2}-.1892527{col 30}{space 2} .0903206{col 41}{space 1}   -2.10{col 50}{space 3}0.038{col 58}{space 4}-.3682468{col 71}{space 3}-.0102585
{txt}{space 12}L7D. {c |}{col 18}{res}{space 2} .0639647{col 30}{space 2} .0913902{col 41}{space 1}    0.70{col 50}{space 3}0.485{col 58}{space 4}-.1171492{col 71}{space 3} .2450786
{txt}{space 16} {c |}
{space 11}_cons {c |}{col 18}{res}{space 2} .0025724{col 30}{space 2} .0044848{col 41}{space 1}    0.57{col 50}{space 3}0.567{col 58}{space 4}-.0063154{col 71}{space 3} .0114602
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. predict pd
{txt}(option {bf:xb} assumed; fitted values)
(260 missing values generated)

{com}. gen pflcount=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen ub1=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd+1*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen lb1=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd-1*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen ub2=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd+2*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen lb2=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd-2*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen ub3=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd+3*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. gen lb3=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd-3*rwrmse) if Date==tm(2021m3)
{txt}(374 missing values generated)

{com}. drop pd
{txt}
{com}. 
. replace pflcount=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace ub1=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace ub2=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace ub3=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace lb1=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace lb2=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. replace lb3=WeeklyEarnings if Date==tm(2021m2)
{txt}(1 real change made)

{com}. 
. twoway (tsrline ub3 ub2 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
>         (tsrline ub2 ub1 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
>         (tsrline ub1 pflcount if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
>         (tsrline pflcount lb1 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
>         (tsrline lb1 lb2 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
>         (tsrline lb2 lb3 if tin(2020m3,2021m3), ///
>         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
>         (tsline WeeklyEarnings pflcount if tin(2020m3,2021m3) , ///
>         lcolor(gs12 teal) lwidth(medthick medthick) ///
>         lpattern(solid longdash)) ///
>         (scatter withMarchEarnings Date if tin(2021m3,)), scheme(s1mono) legend(off)
{res}{txt}
{com}. graph export "WeeklyFan.png", replace
{txt}(file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets/Final Project/WeeklyFan.png written in PNG format)

{com}. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets/Final Project/Final Project.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}19 Apr 2021, 21:08:41
{txt}{.-}
{smcl}
{txt}{sf}{ul off}