                                                       ___  ____  ____  ____  ____(R)
                                                      /__    /   ____/   /   ____/   
                                                     ___/   /   /___/   /   /___/    
                                                       Statistics/Data analysis      
      
      -------------------------------------------------------------------------------
            name:  <unnamed>
             log:  /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Probl
      > em Sets/Final Project/Final Project.smcl
        log type:  smcl
       opened on:  19 Apr 2021, 20:43:14
      
     1 . import delimited "TS2020_Final_Project_Monthly.txt"
      (6 vars, 375 obs)
      
     2 . rename smu12455400500000001 Count
      
     3 . rename smu12455400500000002 WeekHours
      
     4 . rename smu12455400500000003 HourlyEarnings
      
     5 . rename smu12455400500000011 WeeklyEarnings
      
     6 . rename smu12455400800000001 ServiceCount
      
     7 . 
     8 . 
     9 . label variable Count "Count"
      
    10 . label variable WeekHours "WeekHours"
      
    11 . label variable HourlyEarnings "HourlyEarnings"
      
    12 . label variable WeeklyEarnings "WeeklyEarnings"
      
    13 . label variable ServiceCount "ServiceCount"
      
    14 . 
    15 . 
    16 . gen datec=date(date, "YMD")
      
    17 . gen Date=mofd(datec)
      
    18 . gen month=month(datec)
      
    19 . format Date %tm
      
    20 . tsset Date
              time variable:  Date, 1990m1 to 2021m3
                      delta:  1 month
      
    21 . 
    22 . gen withMarchCount = Count
      
    23 . gen withMarchEarnings = WeeklyEarnings
      (252 missing values generated)
      
    24 . replace Count=. if tin(2021m3,)
      (1 real change made, 1 to missing)
      
    25 . replace WeeklyEarnings=. if tin(2021m3,)
      (1 real change made, 1 to missing)
      
    26 . 
    27 . gen lnCount = ln(Count)
      (1 missing value generated)
      
    28 . gen lnWeekHours = ln(WeekHours)
      (252 missing values generated)
      
    29 . gen lnHourlyEarnings = ln(HourlyEarnings)
      (252 missing values generated)
      
    30 . gen lnWeeklyEarnings = ln(WeeklyEarnings)
      (253 missing values generated)
      
    31 . gen lnServiceCount = ln(ServiceCount)
      
    32 . 
    33 . gen m1=0
      
    34 . replace m1=1 if month==1
      (32 real changes made)
      
    35 . gen m2=0
      
    36 . replace m2=1 if month==2
      (32 real changes made)
      
    37 . gen m3=0
      
    38 . replace m3=1 if month==3
      (32 real changes made)
      
    39 . gen m4=0
      
    40 . replace m4=1 if month==4
      (31 real changes made)
      
    41 . gen m5=0
      
    42 . replace m5=1 if month==5
      (31 real changes made)
      
    43 . gen m6=0
      
    44 . replace m6=1 if month==6
      (31 real changes made)
      
    45 . gen m7=0
      
    46 . replace m7=1 if month==7
      (31 real changes made)
      
    47 . gen m8=0
      
    48 . replace m8=1 if month==8
      (31 real changes made)
      
    49 . gen m9=0
      
    50 . replace m9=1 if month==9
      (31 real changes made)
      
    51 . gen m10=0
      
    52 . replace m10=1 if month==10
      (31 real changes made)
      
    53 . gen m11=0
      
    54 . replace m11=1 if month==11
      (31 real changes made)
      
    55 . gen m12=0
      
    56 . replace m12=1 if month==12
      (31 real changes made)
      
    57 . 
    58 . gen dlnCount=d.lnCount
      (2 missing values generated)
      
    59 . gen l1dlnCount=l1d.lnCount
      (2 missing values generated)
      
    60 . gen l2dlnCount=l2d.lnCount
      (3 missing values generated)
      
    61 . gen l3dlnCount=l3d.lnCount
      (4 missing values generated)
      
    62 . gen l4dlnCount=l4d.lnCount
      (5 missing values generated)
      
    63 . gen l5dlnCount=l5d.lnCount
      (6 missing values generated)
      
    64 . gen l6dlnCount=l6d.lnCount
      (7 missing values generated)
      
    65 . gen l7dlnCount=l7d.lnCount
      (8 missing values generated)
      
    66 . gen l8dlnCount=l8d.lnCount
      (9 missing values generated)
      
    67 . gen l9dlnCount=l9d.lnCount
      (10 missing values generated)
      
    68 . gen l10dlnCount=l10d.lnCount
      (11 missing values generated)
      
    69 . gen l11dlnCount=l11d.lnCount
      (12 missing values generated)
      
    70 . gen l12dlnCount=l12d.lnCount
      (13 missing values generated)
      
    71 . gen l24dlnCount=l24d.lnCount
      (25 missing values generated)
      
    72 . gen l36dlnCount=l36d.lnCount
      (37 missing values generated)
      
    73 . gen l48dlnCount=l48d.lnCount
      (49 missing values generated)
      
    74 . 
    75 . gen dlnWeekHours=d.lnWeekHours
      (253 missing values generated)
      
    76 . gen l1dlnWeekHours=l1d.lnWeekHours
      (254 missing values generated)
      
    77 . gen l2dlnWeekHours=l2d.lnWeekHours
      (255 missing values generated)
      
    78 . gen l3dlnWeekHours=l3d.lnWeekHours
      (256 missing values generated)
      
    79 . gen l4dlnWeekHours=l4d.lnWeekHours
      (257 missing values generated)
      
    80 . gen l5dlnWeekHours=l5d.lnWeekHours
      (258 missing values generated)
      
    81 . gen l6dlnWeekHours=l6d.lnWeekHours
      (259 missing values generated)
      
    82 . gen l7dlnWeekHours=l7d.lnWeekHours
      (260 missing values generated)
      
    83 . gen l8dlnWeekHours=l8d.lnWeekHours
      (261 missing values generated)
      
    84 . gen l9dlnWeekHours=l9d.lnWeekHours
      (262 missing values generated)
      
    85 . gen l10dlnWeekHours=l10d.lnWeekHours
      (263 missing values generated)
      
    86 . gen l11dlnWeekHours=l11d.lnWeekHours
      (264 missing values generated)
      
    87 . gen l12dlnWeekHours=l12d.lnWeekHours
      (265 missing values generated)
      
    88 . gen l24dlnWeekHours=l24d.lnWeekHours
      (277 missing values generated)
      
    89 . gen l36dlnWeekHours=l36d.lnWeekHours
      (289 missing values generated)
      
    90 . gen l48dlnWeekHours=l48d.lnWeekHours
      (301 missing values generated)
      
    91 . 
    92 . gen dlnHourlyEarnings=d.lnHourlyEarnings
      (253 missing values generated)
      
    93 . gen l1dlnHourlyEarnings=l1d.lnHourlyEarnings
      (254 missing values generated)
      
    94 . gen l2dlnHourlyEarnings=l2d.lnHourlyEarnings
      (255 missing values generated)
      
    95 . gen l3dlnHourlyEarnings=l3d.lnHourlyEarnings
      (256 missing values generated)
      
    96 . gen l4dlnHourlyEarnings=l4d.lnHourlyEarnings
      (257 missing values generated)
      
    97 . gen l5dlnHourlyEarnings=l5d.lnHourlyEarnings
      (258 missing values generated)
      
    98 . gen l6dlnHourlyEarnings=l6d.lnHourlyEarnings
      (259 missing values generated)
      
    99 . gen l7dlnHourlyEarnings=l7d.lnHourlyEarnings
      (260 missing values generated)
      
   100 . gen l8dlnHourlyEarnings=l8d.lnHourlyEarnings
      (261 missing values generated)
      
   101 . gen l9dlnHourlyEarnings=l9d.lnHourlyEarnings
      (262 missing values generated)
      
   102 . gen l10dlnHourlyEarnings=l10d.lnHourlyEarnings
      (263 missing values generated)
      
   103 . gen l11dlnHourlyEarnings=l11d.lnHourlyEarnings
      (264 missing values generated)
      
   104 . gen l12dlnHourlyEarnings=l12d.lnHourlyEarnings
      (265 missing values generated)
      
   105 . gen l24dlnHourlyEarnings=l24d.lnHourlyEarnings
      (277 missing values generated)
      
   106 . gen l36dlnHourlyEarnings=l36d.lnHourlyEarnings
      (289 missing values generated)
      
   107 . gen l48dlnHourlyEarnings=l48d.lnHourlyEarnings
      (301 missing values generated)
      
   108 . 
   109 . gen dlnWeeklyEarnings=d.lnWeeklyEarnings
      (254 missing values generated)
      
   110 . gen l1dlnWeeklyEarnings=l1d.lnWeeklyEarnings
      (254 missing values generated)
      
   111 . gen l2dlnWeeklyEarnings=l2d.lnWeeklyEarnings
      (255 missing values generated)
      
   112 . gen l3dlnWeeklyEarnings=l3d.lnWeeklyEarnings
      (256 missing values generated)
      
   113 . gen l4dlnWeeklyEarnings=l4d.lnWeeklyEarnings
      (257 missing values generated)
      
   114 . gen l5dlnWeeklyEarnings=l5d.lnWeeklyEarnings
      (258 missing values generated)
      
   115 . gen l6dlnWeeklyEarnings=l6d.lnWeeklyEarnings
      (259 missing values generated)
      
   116 . gen l7dlnWeeklyEarnings=l7d.lnWeeklyEarnings
      (260 missing values generated)
      
   117 . gen l8dlnWeeklyEarnings=l8d.lnWeeklyEarnings
      (261 missing values generated)
      
   118 . gen l9dlnWeeklyEarnings=l9d.lnWeeklyEarnings
      (262 missing values generated)
      
   119 . gen l10dlnWeeklyEarnings=l10d.lnWeeklyEarnings
      (263 missing values generated)
      
   120 . gen l11dlnWeeklyEarnings=l11d.lnWeeklyEarnings
      (264 missing values generated)
      
   121 . gen l12dlnWeeklyEarnings=l12d.lnWeeklyEarnings
      (265 missing values generated)
      
   122 . gen l24dlnWeeklyEarnings=l24d.lnWeeklyEarnings
      (277 missing values generated)
      
   123 . gen l36dlnWeeklyEarnings=l36d.lnWeeklyEarnings
      (289 missing values generated)
      
   124 . gen l48dlnWeeklyEarnings=l48d.lnWeeklyEarnings
      (301 missing values generated)
      
   125 . 
   126 . gen dlnServiceCount=d.lnServiceCount
      (1 missing value generated)
      
   127 . gen l1dlnServiceCount=l1d.lnServiceCount
      (2 missing values generated)
      
   128 . gen l2dlnServiceCount=l2d.lnServiceCount
      (3 missing values generated)
      
   129 . gen l3dlnServiceCount=l3d.lnServiceCount
      (4 missing values generated)
      
   130 . gen l4dlnServiceCount=l4d.lnServiceCount
      (5 missing values generated)
      
   131 . gen l5dlnServiceCount=l5d.lnServiceCount
      (6 missing values generated)
      
   132 . gen l6dlnServiceCount=l6d.lnServiceCount
      (7 missing values generated)
      
   133 . gen l7dlnServiceCount=l7d.lnServiceCount
      (8 missing values generated)
      
   134 . gen l8dlnServiceCount=l8d.lnServiceCount
      (9 missing values generated)
      
   135 . gen l9dlnServiceCount=l9d.lnServiceCount
      (10 missing values generated)
      
   136 . gen l10dlnServiceCount=l10d.lnServiceCount
      (11 missing values generated)
      
   137 . gen l11dlnServiceCount=l11d.lnServiceCount
      (12 missing values generated)
      
   138 . gen l12dlnServiceCount=l12d.lnServiceCount
      (13 missing values generated)
      
   139 . gen l24dlnServiceCount=l24d.lnServiceCount
      (25 missing values generated)
      
   140 . gen l36dlnServiceCount=l36d.lnServiceCount
      (37 missing values generated)
      
   141 . gen l48dlnServiceCount=l48d.lnServiceCount
      (49 missing values generated)
      
   142 . 
   143 . /*
      > The project is to forecast the March non-seasonally adjusted estimates of ave
      > rage weekly earnings and total employment for private employers (total privat
      > e) for a Florida MSA of your choice and write up a professional report on you
      > r forecast.
      > */
   144 . /* Count and WeeklyEarnings */
   145 . 
   146 . summ Count WeekHours HourlyEarnings WeeklyEarnings ServiceCount
      
          Variable |        Obs        Mean    Std. Dev.       Min        Max
      -------------+---------------------------------------------------------
             Count |        374    14.18556    6.880684        5.3         28
         WeekHours |        123    36.88455    3.791817       28.3       45.8
      HourlyEarn~s |        123       19.72    2.903968      15.01       24.6
      WeeklyEarn~s |        122    719.6542    84.57241     503.79      916.1
      ServiceCount |        375    10.43387    5.959179        3.9       22.8
      
   147 . summ lnCount lnWeekHours lnHourlyEarnings lnWeeklyEarnings lnServiceCount
      
          Variable |        Obs        Mean    Std. Dev.       Min        Max
      -------------+---------------------------------------------------------
           lnCount |        374      2.5174    .5398403   1.667707   3.332205
       lnWeekHours |        123    3.602488      .10385   3.342862   3.824284
      lnHourlyEa~s |        123    2.970779    .1482819   2.708717   3.202746
      lnWeeklyEa~s |        122    6.571775    .1195694   6.222159   6.820126
      lnServiceC~t |        375    2.172053    .5985689   1.360977    3.12676
      
   148 . 
   149 . ac lnCount, saving(lnCount_ac, replace)
      (file lnCount_ac.gph saved)
      
   150 . pac lnCount, saving(lnCount_pac, replace)
      (file lnCount_pac.gph saved)
      
   151 . graph combine lnCount_ac.gph lnCount_pac.gph, saving(lnCount_ac_pac, replace)
      (file lnCount_ac_pac.gph saved)
      
   152 . graph export "lnCount_ac_pac.png", replace
      (file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets
      > /Final Project/lnCount_ac_pac.png written in PNG format)
      
   153 . ** Probably need to difference
   154 . 
   155 . ac lnWeeklyEarnings, saving(lnWeeklyEarnings_ac, replace)
      (file lnWeeklyEarnings_ac.gph saved)
      
   156 . pac lnWeeklyEarnings, saving(lnWeeklyEarnings_pac, replace)
      (file lnWeeklyEarnings_pac.gph saved)
      
   157 . graph combine lnWeeklyEarnings_ac.gph lnWeeklyEarnings_pac.gph, saving(lnWeek
      > lyEarnings_ac_pac, replace)
      (file lnWeeklyEarnings_ac_pac.gph saved)
      
   158 . graph export "lnWeeklyEarnings_ac_pac.png", replace
      (file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets
      > /Final Project/lnWeeklyEarnings_ac_pac.png written in PNG format)
      
   159 . ** Probably need to difference
   160 . 
   161 . *starter models for count
   162 . *I used a pair plot to examine the rise and fall of variables with respect to
      >  each other
   163 . reg d.lnCount l(12,24,36,48)d.lnCount // .01637
      
            Source |       SS           df       MS      Number of obs   =       325
      -------------+----------------------------------   F(4, 320)       =     16.54
             Model |  .017539188         4  .004384797   Prob > F        =    0.0000
          Residual |  .084856979       320  .000265178   R-squared       =    0.1713
      -------------+----------------------------------   Adj R-squared   =    0.1609
             Total |  .102396167       324  .000316038   Root MSE        =    .01628
      
      ------------------------------------------------------------------------------
         D.lnCount |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
      -------------+----------------------------------------------------------------
           lnCount |
             L12D. |   .3609966   .0621085     5.81   0.000      .238804    .4831893
             L24D. |    .137848   .0617615     2.23   0.026      .016338     .259358
             L36D. |  -.0160136   .0614584    -0.26   0.795    -.1369272       .1049
             L48D. |   .1265117   .0585322     2.16   0.031     .0113551    .2416683
                   |
             _cons |   .0017116   .0009853     1.74   0.083    -.0002269    .0036502
      ------------------------------------------------------------------------------
      
   164 . scalar drop _all
      
   165 . quietly forval w=12(12)144 {
      
   166 . scalar list
      RWmaxobs144 =        144
      RWminobs144 =         12
       RWrmse144 =   .0172276
      RWmaxobs132 =        132
      RWminobs132 =         12
       RWrmse132 =   .0172128
      RWmaxobs120 =        120
      RWminobs120 =         12
       RWrmse120 =  .01721825
      RWmaxobs108 =        108
      RWminobs108 =         12
       RWrmse108 =  .01723674
      RWmaxobs96 =         96
      RWminobs96 =         12
        RWrmse96 =  .01722006
      RWmaxobs84 =         84
      RWminobs84 =         12
        RWrmse84 =  .01726063
      RWmaxobs72 =         72
      RWminobs72 =         12
        RWrmse72 =  .01722377
      RWmaxobs60 =         60
      RWminobs60 =         12
        RWrmse60 =   .0173443
      RWmaxobs48 =         48
      RWminobs48 =         12
        RWrmse48 =  .01755803
      RWmaxobs36 =         36
      RWminobs36 =         12
        RWrmse36 =  .01805924
      RWmaxobs24 =         24
      RWminobs24 =         12
        RWrmse24 =   .0185871
      RWmaxobs12 =         12
      RWminobs12 =         12
        RWrmse12 =  .02320505
      
   167 . /*
      > RWmaxobs132 =        132
      > RWminobs132 =         12
      > RWrmse132 =   .0172128
      > */
   168 . 
   169 . reg d.lnCount l(5,12,24,36,48)d.lnCount l(5)d.lnWeekHours m5 // .01711
      
            Source |       SS           df       MS      Number of obs   =       116
      -------------+----------------------------------   F(7, 108)       =      5.94
             Model |  .012171566         7  .001738795   Prob > F        =    0.0000
          Residual |   .03162877       108  .000292859   R-squared       =    0.2779
      -------------+----------------------------------   Adj R-squared   =    0.2311
             Total |  .043800336       115  .000380872   Root MSE        =    .01711
      
      ------------------------------------------------------------------------------
         D.lnCount |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
      -------------+----------------------------------------------------------------
           lnCount |
              L5D. |  -.1231921   .0845717    -1.46   0.148     -.290828    .0444438
             L12D. |   .5811114   .1685831     3.45   0.001     .2469504    .9152724
             L24D. |  -.1196017   .1627467    -0.73   0.464    -.4421938    .2029904
             L36D. |   .2532303   .1742525     1.45   0.149    -.0921684    .5986291
             L48D. |   .1341638   .1858633     0.72   0.472    -.2342495    .5025771
                   |
       lnWeekHours |
              L5D. |   .0170123   .0364906     0.47   0.642    -.0553184     .089343
                   |
                m5 |   .0067588   .0061605     1.10   0.275    -.0054524    .0189699
             _cons |   .0004279   .0018229     0.23   0.815    -.0031854    .0040412
      ------------------------------------------------------------------------------
      
   170 . scalar drop _all
      
   171 . quietly forval w=12(12)84 {
      
   172 . scalar list
      RWmaxobs84 =         84
      RWminobs84 =         23
        RWrmse84 =  .01950911
      RWmaxobs72 =         72
      RWminobs72 =         23
        RWrmse72 =  .01949719
      RWmaxobs60 =         60
      RWminobs60 =         23
        RWrmse60 =   .0199438
      RWmaxobs48 =         48
      RWminobs48 =         23
        RWrmse48 =  .02035982
      RWmaxobs36 =         36
      RWminobs36 =         23
        RWrmse36 =  .02138785
      RWmaxobs24 =         24
      RWminobs24 =         23
        RWrmse24 =  .02268585
      RWmaxobs12 =         12
      RWminobs12 =         12
        RWrmse12 =  .05004898
      
   173 . /*
      > RWmaxobs84 =         84
      > RWminobs84 =         23
      > RWrmse84 =  .01950911
      > */
   174 . 
   175 . quietly gsreg dlnCount l1dlnCount l2dlnCount l3dlnCount l4dlnCount l5dlnCount
      >  l6dlnCount ///
      >         l7dlnCount l8dlnCount l9dlnCount l10dlnCount l11dlnCount l12dlnCount 
      > ///
      >         l24dlnCount l36dlnCount l48dlnCount ///
      >         if tin(1990m1,2021m1), ///
      >         ncomb(1,12) aic outsample(24) fix(m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 
      > m12) ///
      >         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnCount)
      >  replace
      
   176 .         
   177 . *gsreg suggestions
   178 . reg d.lnCount l12d.lnCount m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11
      
            Source |       SS           df       MS      Number of obs   =       361
      -------------+----------------------------------   F(12, 348)      =      6.91
             Model |  .022616974        12  .001884748   Prob > F        =    0.0000
          Residual |  .094871179       348  .000272618   R-squared       =    0.1925
      -------------+----------------------------------   Adj R-squared   =    0.1647
             Total |  .117488153       360  .000326356   Root MSE        =    .01651
      
      ------------------------------------------------------------------------------
         D.lnCount |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
      -------------+----------------------------------------------------------------
           lnCount |
             L12D. |   .1748571   .0594184     2.94   0.003     .0579928    .2917215
                   |
                m1 |  -.0099477   .0043004    -2.31   0.021    -.0184056   -.0014897
                m2 |   .0009939   .0042297     0.23   0.814    -.0073251    .0093129
                m3 |   .0030247   .0042759     0.71   0.480    -.0053851    .0114345
                m4 |  -.0071933   .0042648    -1.69   0.093    -.0155814    .0011948
                m5 |  -.0098194   .0043178    -2.27   0.024    -.0183118   -.0013271
                m6 |  -.0133285   .0043874    -3.04   0.003    -.0219576   -.0046994
                m7 |  -.0091828   .0042967    -2.14   0.033    -.0176336    -.000732
                m8 |  -.0017998   .0042632    -0.42   0.673    -.0101846     .006585
                m9 |   -.006737   .0042824    -1.57   0.117    -.0151597    .0016858
               m10 |   .0062149   .0042795     1.45   0.147    -.0022021    .0146319
               m11 |   .0042124   .0042811     0.98   0.326    -.0042078    .0126325
             _cons |   .0072199   .0030452     2.37   0.018     .0012306    .0132093
      ------------------------------------------------------------------------------
      
   179 . scalar drop _all
      
   180 . quietly forval w=12(12)144 {
      
   181 . scalar list
      RWmaxobs144 =        144
      RWminobs144 =         12
       RWrmse144 =  .01824906
      RWmaxobs132 =        132
      RWminobs132 =         12
       RWrmse132 =  .01832173
      RWmaxobs120 =        120
      RWminobs120 =         12
       RWrmse120 =  .01833557
      RWmaxobs108 =        108
      RWminobs108 =         12
       RWrmse108 =  .01841089
      RWmaxobs96 =         96
      RWminobs96 =         12
        RWrmse96 =  .01836974
      RWmaxobs84 =         84
      RWminobs84 =         12
        RWrmse84 =  .01849267
      RWmaxobs72 =         72
      RWminobs72 =         12
        RWrmse72 =  .01861349
      RWmaxobs60 =         60
      RWminobs60 =         12
        RWrmse60 =  .01911515
      RWmaxobs48 =         48
      RWminobs48 =         12
        RWrmse48 =  .01922268
      RWmaxobs36 =         36
      RWminobs36 =         12
        RWrmse36 =  .01991683
      RWmaxobs24 =         24
      RWminobs24 =         12
        RWrmse24 =  .02022186
      RWmaxobs12 =         12
      RWminobs12 =         12
        RWrmse12 =  .02009249
      
   182 . /*
      > RWmaxobs144 =        144
      > RWminobs144 =         12
      > RWrmse144 =  .01824906
      > */
   183 . 
   184 . reg d.lnCount l(12,36)d.lnCount m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11
      
            Source |       SS           df       MS      Number of obs   =       337
      -------------+----------------------------------   F(13, 323)      =      5.68
             Model |  .019946057        13  .001534312   Prob > F        =    0.0000
          Residual |  .087185203       323  .000269923   R-squared       =    0.1862
      -------------+----------------------------------   Adj R-squared   =    0.1534
             Total |  .107131259       336  .000318843   Root MSE        =    .01643
      
      ------------------------------------------------------------------------------
         D.lnCount |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
      -------------+----------------------------------------------------------------
           lnCount |
             L12D. |   .1849403   .0636401     2.91   0.004      .059739    .3101417
             L36D. |   -.049332   .0606582    -0.81   0.417    -.1686671    .0700031
                   |
                m1 |  -.0073418   .0044769    -1.64   0.102    -.0161493    .0014658
                m2 |   .0022711   .0043559     0.52   0.602    -.0062984    .0108407
                m3 |   .0043593    .004416     0.99   0.324    -.0043285    .0130471
                m4 |  -.0065438   .0043922    -1.49   0.137    -.0151847     .002097
                m5 |  -.0089215   .0045194    -1.97   0.049    -.0178126   -.0000304
                m6 |  -.0133453   .0046241    -2.89   0.004    -.0224425    -.004248
                m7 |  -.0085154    .004457    -1.91   0.057    -.0172839    .0002531
                m8 |  -.0004554    .004392    -0.10   0.917    -.0090959    .0081852
                m9 |  -.0056625   .0044299    -1.28   0.202    -.0143775    .0030526
               m10 |   .0071688   .0044386     1.62   0.107    -.0015635    .0159011
               m11 |   .0042074   .0044259     0.95   0.343    -.0044998    .0129146
             _cons |   .0067355   .0031722     2.12   0.034     .0004948    .0129762
      ------------------------------------------------------------------------------
      
   185 . scalar drop _all
      
   186 . quietly forval w=12(12)144 {
      
   187 . scalar list
      RWmaxobs144 =        144
      RWminobs144 =         12
       RWrmse144 =  .01777071
      RWmaxobs132 =        132
      RWminobs132 =         12
       RWrmse132 =  .01782557
      RWmaxobs120 =        120
      RWminobs120 =         12
       RWrmse120 =  .01785253
      RWmaxobs108 =        108
      RWminobs108 =         12
       RWrmse108 =  .01794692
      RWmaxobs96 =         96
      RWminobs96 =         12
        RWrmse96 =  .01793358
      RWmaxobs84 =         84
      RWminobs84 =         12
        RWrmse84 =  .01803355
      RWmaxobs72 =         72
      RWminobs72 =         12
        RWrmse72 =  .01807408
      RWmaxobs60 =         60
      RWminobs60 =         12
        RWrmse60 =  .01843535
      RWmaxobs48 =         48
      RWminobs48 =         12
        RWrmse48 =  .01835092
      RWmaxobs36 =         36
      RWminobs36 =         12
        RWrmse36 =  .01863303
      RWmaxobs24 =         24
      RWminobs24 =         12
        RWrmse24 =   .0196745
      RWmaxobs12 =         12
      RWminobs12 =         12
        RWrmse12 =  .01880291
      
   188 . /*
      > RWmaxobs144 =        144
      > RWminobs144 =         12
      > RWrmse144 =  .01777071
      > */
   189 .         
   190 . reg d.lnCount l4d.lnWeekHours l9d.lnWeekHours l8d.lnHourlyEarnings m1 m2 m3 m
      > 4 m5 m6 m7 m8 m9 m10 m11
      
            Source |       SS           df       MS      Number of obs   =       112
      -------------+----------------------------------   F(14, 97)       =      3.24
             Model |  .013917393        14    .0009941   Prob > F        =    0.0003
          Residual |  .029798432        97    .0003072   R-squared       =    0.3184
      -------------+----------------------------------   Adj R-squared   =    0.2200
             Total |  .043715825       111  .000393836   Root MSE        =    .01753
      
      -------------------------------------------------------------------------------
      ---
             D.lnCount |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interv
      > al]
      -----------------+-------------------------------------------------------------
      ---
           lnWeekHours |
                  L4D. |  -.0013847   .0384012    -0.04   0.971    -.0776005     .074
      > 831
                  L9D. |   .0397686   .0385964     1.03   0.305    -.0368346    .1163
      > 718
                       |
      lnHourlyEarnings |
                  L8D. |   -.039029   .0414024    -0.94   0.348    -.1212014    .0431
      > 433
                       |
                    m1 |  -.0097045   .0078517    -1.24   0.219    -.0252879    .0058
      > 789
                    m2 |   .0000949   .0079445     0.01   0.990    -.0156727    .0158
      > 626
                    m3 |   -.004712   .0083585    -0.56   0.574    -.0213013    .0118
      > 773
                    m4 |  -.0273667   .0081729    -3.35   0.001    -.0435876   -.0111
      > 459
                    m5 |  -.0076836   .0081259    -0.95   0.347    -.0238112     .008
      > 444
                    m6 |   -.020254   .0081465    -2.49   0.015    -.0364227   -.0040
      > 854
                    m7 |  -.0130812   .0081852    -1.60   0.113    -.0293265    .0031
      > 642
                    m8 |   .0041701   .0081051     0.51   0.608    -.0119164    .0202
      > 565
                    m9 |  -.0089171   .0082764    -1.08   0.284    -.0253435    .0075
      > 093
                   m10 |   .0153608   .0081153     1.89   0.061    -.0007459    .0314
      > 674
                   m11 |   .0040463   .0079619     0.51   0.612    -.0117559    .0198
      > 485
                 _cons |   .0094122   .0056462     1.67   0.099    -.0017939    .0206
      > 183
      -------------------------------------------------------------------------------
      ---
      
   191 . scalar drop _all
      
   192 . quietly forval w=12(12)84 {
      
   193 . scalar list
      RWmaxobs84 =         84
      RWminobs84 =          2
        RWrmse84 =  .01847546
      RWmaxobs72 =         72
      RWminobs72 =          2
        RWrmse72 =  .01855448
      RWmaxobs60 =         60
      RWminobs60 =          2
        RWrmse60 =  .01850723
      RWmaxobs48 =         48
      RWminobs48 =          2
        RWrmse48 =  .01850217
      RWmaxobs36 =         36
      RWminobs36 =          2
        RWrmse36 =  .01942535
      RWmaxobs24 =         24
      RWminobs24 =          2
        RWrmse24 =  .02208272
      RWmaxobs12 =         12
      RWminobs12 =          2
        RWrmse12 =   .0176238
      
   194 . /*
      > RWmaxobs12 =         12
      > RWminobs12 =          2
      > RWrmse12 =   .0176238
      > */
   195 . 
   196 . scalar rwrmse = .0172128
      
   197 . reg d.lnCount l(12,24,36,48)d.lnCount if tin(,2021m2)
      
            Source |       SS           df       MS      Number of obs   =       325
      -------------+----------------------------------   F(4, 320)       =     16.54
             Model |  .017539188         4  .004384797   Prob > F        =    0.0000
          Residual |  .084856979       320  .000265178   R-squared       =    0.1713
      -------------+----------------------------------   Adj R-squared   =    0.1609
             Total |  .102396167       324  .000316038   Root MSE        =    .01628
      
      ------------------------------------------------------------------------------
         D.lnCount |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
      -------------+----------------------------------------------------------------
           lnCount |
             L12D. |   .3609966   .0621085     5.81   0.000      .238804    .4831893
             L24D. |    .137848   .0617615     2.23   0.026      .016338     .259358
             L36D. |  -.0160136   .0614584    -0.26   0.795    -.1369272       .1049
             L48D. |   .1265117   .0585322     2.16   0.031     .0113551    .2416683
                   |
             _cons |   .0017116   .0009853     1.74   0.083    -.0002269    .0036502
      ------------------------------------------------------------------------------
      
   198 . predict pd
      (option xb assumed; fitted values)
      (49 missing values generated)
      
   199 . gen pflcount=exp((rwrmse^2)/2)*exp(l.lnCount+pd) if Date==tm(2021m3)
      (374 missing values generated)
      
   200 . gen ub1=exp((rwrmse^2)/2)*exp(l.lnCount+pd+1*rwrmse) if Date==tm(2021m3)
      (374 missing values generated)
      
   201 . gen lb1=exp((rwrmse^2)/2)*exp(l.lnCount+pd-1*rwrmse) if Date==tm(2021m3)
      (374 missing values generated)
      
   202 . gen ub2=exp((rwrmse^2)/2)*exp(l.lnCount+pd+2*rwrmse) if Date==tm(2021m3)
      (374 missing values generated)
      
   203 . gen lb2=exp((rwrmse^2)/2)*exp(l.lnCount+pd-2*rwrmse) if Date==tm(2021m3)
      (374 missing values generated)
      
   204 . gen ub3=exp((rwrmse^2)/2)*exp(l.lnCount+pd+3*rwrmse) if Date==tm(2021m3)
      (374 missing values generated)
      
   205 . gen lb3=exp((rwrmse^2)/2)*exp(l.lnCount+pd-3*rwrmse) if Date==tm(2021m3)
      (374 missing values generated)
      
   206 . drop pd
      
   207 . 
   208 . replace pflcount=Count if Date==tm(2021m2)
      (1 real change made)
      
   209 . replace ub1=Count if Date==tm(2021m2)
      (1 real change made)
      
   210 . replace ub2=Count if Date==tm(2021m2)
      (1 real change made)
      
   211 . replace ub3=Count if Date==tm(2021m2)
      (1 real change made)
      
   212 . replace lb1=Count if Date==tm(2021m2)
      (1 real change made)
      
   213 . replace lb2=Count if Date==tm(2021m2)
      (1 real change made)
      
   214 . replace lb3=Count if Date==tm(2021m2)
      (1 real change made)
      
   215 . 
   216 . twoway (tsrline ub3 ub2 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsrline ub2 ub1 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline ub1 pflcount if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline pflcount lb1 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline lb1 lb2 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline lb2 lb3 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsline Count pflcount if tin(2020m3,2021m3) , ///
      >         lcolor(gs12 teal) lwidth(medthick medthick) ///
      >         lpattern(solid longdash)) ///
      >         (scatter withMarchCount Date if tin(2021m3,)), scheme(s1mono) legend(
      > off)
      
   217 . graph export "CountFan.png", replace
      (file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets
      > /Final Project/CountFan.png written in PNG format)
      
   218 .         
   219 . /*---------------------------------------------------------------------------
      > -*/
   220 .         
   221 . *starter models for weekly earnings
   222 . reg d.lnWeeklyEarnings l1d.lnWeekHours ld.lnHourlyEarnings
      
            Source |       SS           df       MS      Number of obs   =       120
      -------------+----------------------------------   F(2, 117)       =      1.48
             Model |    .0071986         2    .0035993   Prob > F        =    0.2316
          Residual |  .284290844       117  .002429836   R-squared       =    0.0247
      -------------+----------------------------------   Adj R-squared   =    0.0080
             Total |  .291489443       119  .002449491   Root MSE        =    .04929
      
      -------------------------------------------------------------------------------
      ---
      D.               |
      lnWeeklyEarnings |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interv
      > al]
      -----------------+-------------------------------------------------------------
      ---
           lnWeekHours |
                   LD. |  -.1334776   .1058563    -1.26   0.210    -.3431204    .0761
      > 651
                       |
      lnHourlyEarnings |
                   LD. |   .0746807   .1166933     0.64   0.523    -.1564244    .3057
      > 857
                       |
                 _cons |   .0015108   .0045071     0.34   0.738    -.0074152    .0104
      > 368
      -------------------------------------------------------------------------------
      ---
      
   223 . scalar drop _all
      
   224 . quietly forval w=12(12)84 {
      
   225 . scalar list
      RWmaxobs84 =         84
      RWminobs84 =          2
        RWrmse84 =  .06183191
      RWmaxobs72 =         72
      RWminobs72 =          2
        RWrmse72 =  .06162109
      RWmaxobs60 =         60
      RWminobs60 =          2
        RWrmse60 =  .06144232
      RWmaxobs48 =         48
      RWminobs48 =          2
        RWrmse48 =   .0618403
      RWmaxobs36 =         36
      RWminobs36 =          2
        RWrmse36 =  .06201409
      RWmaxobs24 =         24
      RWminobs24 =          2
        RWrmse24 =  .06224974
      RWmaxobs12 =         12
      RWminobs12 =          2
        RWrmse12 =  .06583082
      
   226 . /*
      > RWmaxobs60 =         60
      > RWminobs60 =          2
      > RWrmse60 =  .06145693
      > */
   227 . 
   228 . quietly gsreg dlnWeeklyEarnings l1dlnWeeklyEarnings l2dlnWeeklyEarnings l3dln
      > WeeklyEarnings ///
      >         l4dlnWeeklyEarnings l5dlnWeeklyEarnings l6dlnWeeklyEarnings ///
      >         l7dlnWeeklyEarnings l8dlnWeeklyEarnings l9dlnWeeklyEarnings l10dlnWee
      > klyEarnings ///
      >         l11dlnWeeklyEarnings l12dlnWeeklyEarnings ///
      >         l24dlnWeeklyEarnings l36dlnWeeklyEarnings ///
      >         if tin(2011m1,2021m1), ///
      >         ncomb(1,12) aic outsample(24) ///
      >         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnWeekly
      > Earnings) replace
      
   229 .         
   230 . reg d.lnWeeklyEarnings l3d.lnWeeklyEarnings l5d.lnWeeklyEarnings m1 m2 m3 m4 
      > m5 m6 m7 m8 m9 m10 m11
      
            Source |       SS           df       MS      Number of obs   =       116
      -------------+----------------------------------   F(13, 102)      =      2.16
             Model |  .061304493        13   .00471573   Prob > F        =    0.0166
          Residual |  .222983103       102  .002186109   R-squared       =    0.2156
      -------------+----------------------------------   Adj R-squared   =    0.1157
             Total |  .284287596       115  .002472066   Root MSE        =    .04676
      
      -------------------------------------------------------------------------------
      ---
      D.               |
      lnWeeklyEarnings |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interv
      > al]
      -----------------+-------------------------------------------------------------
      ---
      lnWeeklyEarnings |
                  L3D. |  -.2267216   .0950679    -2.38   0.019    -.4152883   -.0381
      > 549
                  L5D. |  -.1621197    .095104    -1.70   0.091     -.350758    .0265
      > 186
                       |
                    m1 |   -.013308   .0213233    -0.62   0.534    -.0556027    .0289
      > 866
                    m2 |    .020775   .0212478     0.98   0.331      -.02137      .06
      > 292
                    m3 |  -.0123903   .0220875    -0.56   0.576    -.0562008    .0314
      > 201
                    m4 |   .0105198   .0219037     0.48   0.632    -.0329261    .0539
      > 657
                    m5 |   .0377285   .0216445     1.74   0.084    -.0052032    .0806
      > 602
                    m6 |   .0272631   .0216181     1.26   0.210    -.0156164    .0701
      > 426
                    m7 |  -.0220653   .0214504    -1.03   0.306     -.064612    .0204
      > 813
                    m8 |   .0152172   .0210597     0.72   0.472    -.0265547    .0569
      > 891
                    m9 |   .0201901   .0215988     0.93   0.352    -.0226509    .0630
      > 312
                   m10 |   .0207722    .021844     0.95   0.344    -.0225553    .0640
      > 997
                   m11 |   .0084712   .0217091     0.39   0.697    -.0345888    .0515
      > 312
                 _cons |  -.0073031   .0151547    -0.48   0.631    -.0373625    .0227
      > 563
      -------------------------------------------------------------------------------
      ---
      
   231 . scalar drop _all
      
   232 . quietly forval w=12(12)84 {
      
   233 . scalar list
      RWmaxobs84 =         84
      RWminobs84 =          2
        RWrmse84 =  .06011868
      RWmaxobs72 =         72
      RWminobs72 =          2
        RWrmse72 =  .06057642
      RWmaxobs60 =         60
      RWminobs60 =          2
        RWrmse60 =  .06071208
      RWmaxobs48 =         48
      RWminobs48 =          2
        RWrmse48 =  .06042055
      RWmaxobs36 =         36
      RWminobs36 =          2
        RWrmse36 =  .06125152
      RWmaxobs24 =         24
      RWminobs24 =          2
        RWrmse24 =  .06537943
      RWmaxobs12 =         12
      RWminobs12 =          2
        RWrmse12 =   .0702019
      
   234 . /*
      > RWmaxobs84 =         84
      > RWminobs84 =          2
      > RWrmse84 =  .06004448
      > */
   235 . 
   236 . reg d.lnWeeklyEarnings l3d.lnWeeklyEarnings l5d.lnWeeklyEarnings l7d.lnWeekly
      > Earnings
      
            Source |       SS           df       MS      Number of obs   =       114
      -------------+----------------------------------   F(3, 110)       =      3.85
             Model |  .026396014         3  .008798671   Prob > F        =    0.0115
          Residual |  .251283445       110  .002284395   R-squared       =    0.0951
      -------------+----------------------------------   Adj R-squared   =    0.0704
             Total |  .277679459       113   .00245734   Root MSE        =     .0478
      
      -------------------------------------------------------------------------------
      ---
      D.               |
      lnWeeklyEarnings |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interv
      > al]
      -----------------+-------------------------------------------------------------
      ---
      lnWeeklyEarnings |
                  L3D. |  -.2408947   .0906673    -2.66   0.009    -.4205761   -.0612
      > 133
                  L5D. |  -.1892527   .0903206    -2.10   0.038    -.3682468   -.0102
      > 585
                  L7D. |   .0639647   .0913902     0.70   0.485    -.1171492    .2450
      > 786
                       |
                 _cons |   .0025724   .0044848     0.57   0.567    -.0063154    .0114
      > 602
      -------------------------------------------------------------------------------
      ---
      
   237 . scalar drop _all
      
   238 . quietly forval w=12(12)84 {
      
   239 . scalar list
      RWmaxobs84 =         84
      RWminobs84 =          2
        RWrmse84 =  .05259823
      RWmaxobs72 =         72
      RWminobs72 =          2
        RWrmse72 =  .05283772
      RWmaxobs60 =         60
      RWminobs60 =          2
        RWrmse60 =  .05314168
      RWmaxobs48 =         48
      RWminobs48 =          2
        RWrmse48 =   .0530381
      RWmaxobs36 =         36
      RWminobs36 =          2
        RWrmse36 =  .05353125
      RWmaxobs24 =         24
      RWminobs24 =          2
        RWrmse24 =  .05282122
      RWmaxobs12 =         12
      RWminobs12 =          2
        RWrmse12 =  .06036464
      
   240 . /*
      > RWmaxobs84 =         84
      > RWminobs84 =          2
      > RWrmse84 =  .05250414
      > */
   241 . 
   242 . drop pflcount ub1 ub2 ub3 lb1 lb2 lb3
      
   243 . 
   244 . scalar rwrmse = .05250414
      
   245 . reg d.lnWeeklyEarnings l(3,5,7)d.lnWeeklyEarnings if tin(,2021m2)
      
            Source |       SS           df       MS      Number of obs   =       114
      -------------+----------------------------------   F(3, 110)       =      3.85
             Model |  .026396014         3  .008798671   Prob > F        =    0.0115
          Residual |  .251283445       110  .002284395   R-squared       =    0.0951
      -------------+----------------------------------   Adj R-squared   =    0.0704
             Total |  .277679459       113   .00245734   Root MSE        =     .0478
      
      -------------------------------------------------------------------------------
      ---
      D.               |
      lnWeeklyEarnings |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interv
      > al]
      -----------------+-------------------------------------------------------------
      ---
      lnWeeklyEarnings |
                  L3D. |  -.2408947   .0906673    -2.66   0.009    -.4205761   -.0612
      > 133
                  L5D. |  -.1892527   .0903206    -2.10   0.038    -.3682468   -.0102
      > 585
                  L7D. |   .0639647   .0913902     0.70   0.485    -.1171492    .2450
      > 786
                       |
                 _cons |   .0025724   .0044848     0.57   0.567    -.0063154    .0114
      > 602
      -------------------------------------------------------------------------------
      ---
      
   246 . predict pd
      (option xb assumed; fitted values)
      (260 missing values generated)
      
   247 . gen pflcount=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd) if Date==tm(2021m3)
      (374 missing values generated)
      
   248 . gen ub1=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd+1*rwrmse) if Date==tm(202
      > 1m3)
      (374 missing values generated)
      
   249 . gen lb1=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd-1*rwrmse) if Date==tm(202
      > 1m3)
      (374 missing values generated)
      
   250 . gen ub2=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd+2*rwrmse) if Date==tm(202
      > 1m3)
      (374 missing values generated)
      
   251 . gen lb2=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd-2*rwrmse) if Date==tm(202
      > 1m3)
      (374 missing values generated)
      
   252 . gen ub3=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd+3*rwrmse) if Date==tm(202
      > 1m3)
      (374 missing values generated)
      
   253 . gen lb3=exp((rwrmse^2)/2)*exp(l.lnWeeklyEarnings+pd-3*rwrmse) if Date==tm(202
      > 1m3)
      (374 missing values generated)
      
   254 . drop pd
      
   255 . 
   256 . replace pflcount=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   257 . replace ub1=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   258 . replace ub2=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   259 . replace ub3=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   260 . replace lb1=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   261 . replace lb2=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   262 . replace lb3=WeeklyEarnings if Date==tm(2021m2)
      (1 real change made)
      
   263 . 
   264 . twoway (tsrline ub3 ub2 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsrline ub2 ub1 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline ub1 pflcount if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline pflcount lb1 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline lb1 lb2 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline lb2 lb3 if tin(2020m3,2021m3), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsline WeeklyEarnings pflcount if tin(2020m3,2021m3) , ///
      >         lcolor(gs12 teal) lwidth(medthick medthick) ///
      >         lpattern(solid longdash)) ///
      >         (scatter withMarchEarnings Date if tin(2021m3,)), scheme(s1mono) lege
      > nd(off)
      
   265 . graph export "WeeklyFan.png", replace
      (file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets
      > /Final Project/WeeklyFan.png written in PNG format)
      
   266 . 
   267 . log close
            name:  <unnamed>
             log:  /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Probl
      > em Sets/Final Project/Final Project.smcl
        log type:  smcl
       closed on:  19 Apr 2021, 21:08:41
      -------------------------------------------------------------------------------
