                                                       ___  ____  ____  ____  ____(R)
                                                      /__    /   ____/   /   ____/   
                                                     ___/   /   /___/   /   /___/    
                                                       Statistics/Data analysis      
      
      -------------------------------------------------------------------------------
            name:  <unnamed>
             log:  /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Probl
      > em Sets/Problem Set 6/Problem Set 6.smcl
        log type:  smcl
       opened on:  26 Apr 2021, 20:58:56
      
     1 . import delimited "Assignment_1_Monthly.txt"
      (5 vars, 984 obs)
      
     2 . 
     3 . rename lnu02300000 us_epr
      
     4 . rename flnan fl_nonfarm
      
     5 . rename fllfn fl_lf
      
     6 . rename flbppriv fl_bp
      
     7 . rename date datestring
      
     8 . 
     9 . gen datec=date(datestring, "YMD")
      
    10 . gen date=mofd(datec)
      
    11 . gen month=month(datec)
      
    12 . format date %tm
      
    13 . 
    14 . tsset date
              time variable:  date, 1939m1 to 2020m12
                      delta:  1 month
      
    15 . 
    16 . gen lnusepr=log(us_epr)
      (108 missing values generated)
      
    17 . gen lnflnonfarm=log(fl_nonfarm)
      
    18 . gen lnfllf=log(fl_lf)
      (444 missing values generated)
      
    19 . gen lnflbp=log(fl_bp)
      (588 missing values generated)
      
    20 . 
    21 . drop if !tin(1990m1,2019m12)
      (624 observations deleted)
      
    22 . 
    23 . tsset date
              time variable:  date, 1990m1 to 2019m12
                      delta:  1 month
      
    24 . tsappend, add(12)
      
    25 . replace month=month(dofm(date))
      (12 real changes made)
      
    26 . 
    27 . gen m1=0
      
    28 . replace m1=1 if month==1
      (31 real changes made)
      
    29 . gen m2=0
      
    30 . replace m2=1 if month==2
      (31 real changes made)
      
    31 . gen m3=0
      
    32 . replace m3=1 if month==3
      (31 real changes made)
      
    33 . gen m4=0
      
    34 . replace m4=1 if month==4
      (31 real changes made)
      
    35 . gen m5=0
      
    36 . replace m5=1 if month==5
      (31 real changes made)
      
    37 . gen m6=0
      
    38 . replace m6=1 if month==6
      (31 real changes made)
      
    39 . gen m7=0
      
    40 . replace m7=1 if month==7
      (31 real changes made)
      
    41 . gen m8=0
      
    42 . replace m8=1 if month==8
      (31 real changes made)
      
    43 . gen m9=0
      
    44 . replace m9=1 if month==9
      (31 real changes made)
      
    45 . gen m10=0
      
    46 . replace m10=1 if month==10
      (31 real changes made)
      
    47 . gen m11=0
      
    48 . replace m11=1 if month==11
      (31 real changes made)
      
    49 . 
    50 . gen dlnflnonfarm=d.lnflnonfarm
      (13 missing values generated)
      
    51 . gen l1dlnflnonfarm=l1d.lnflnonfarm
      (13 missing values generated)
      
    52 . gen l2dlnflnonfarm=l2d.lnflnonfarm
      (13 missing values generated)
      
    53 . gen l3dlnflnonfarm=l3d.lnflnonfarm
      (13 missing values generated)
      
    54 . gen l4dlnflnonfarm=l4d.lnflnonfarm
      (13 missing values generated)
      
    55 . gen l5dlnflnonfarm=l5d.lnflnonfarm
      (13 missing values generated)
      
    56 . gen l6dlnflnonfarm=l6d.lnflnonfarm
      (13 missing values generated)
      
    57 . gen l7dlnflnonfarm=l7d.lnflnonfarm
      (13 missing values generated)
      
    58 . gen l8dlnflnonfarm=l8d.lnflnonfarm
      (13 missing values generated)
      
    59 . gen l9dlnflnonfarm=l9d.lnflnonfarm
      (13 missing values generated)
      
    60 . gen l10dlnflnonfarm=l10d.lnflnonfarm
      (13 missing values generated)
      
    61 . gen l11dlnflnonfarm=l11d.lnflnonfarm
      (13 missing values generated)
      
    62 . gen l12dlnflnonfarm=l12d.lnflnonfarm
      (13 missing values generated)
      
    63 . gen l24dlnflnonfarm=l24d.lnflnonfarm
      (25 missing values generated)
      
    64 . 
    65 . gen dlnfllf=d.lnfllf
      (13 missing values generated)
      
    66 . gen l1dlnfllf=l1d.lnfllf
      (13 missing values generated)
      
    67 . gen l2dlnfllf=l2d.lnfllf
      (13 missing values generated)
      
    68 . gen l3dlnfllf=l3d.lnfllf
      (13 missing values generated)
      
    69 . gen l4dlnfllf=l4d.lnfllf
      (13 missing values generated)
      
    70 . gen l5dlnfllf=l5d.lnfllf
      (13 missing values generated)
      
    71 . gen l6dlnfllf=l6d.lnfllf
      (13 missing values generated)
      
    72 . gen l7dlnfllf=l7d.lnfllf
      (13 missing values generated)
      
    73 . gen l8dlnfllf=l8d.lnfllf
      (13 missing values generated)
      
    74 . gen l9dlnfllf=l9d.lnfllf
      (13 missing values generated)
      
    75 . gen l10dlnfllf=l10d.lnfllf
      (13 missing values generated)
      
    76 . gen l11dlnfllf=l11d.lnfllf
      (13 missing values generated)
      
    77 . gen l12dlnfllf=l12d.lnfllf
      (13 missing values generated)
      
    78 . gen l24dlnfllf=l24d.lnfllf
      (25 missing values generated)
      
    79 . 
    80 . gen dlnusepr=d.lnusepr
      (13 missing values generated)
      
    81 . gen l1dlnusepr=l1d.lnusepr
      (13 missing values generated)
      
    82 . gen l2dlnusepr=l2d.lnusepr
      (13 missing values generated)
      
    83 . gen l3dlnusepr=l3d.lnusepr
      (13 missing values generated)
      
    84 . gen l4dlnusepr=l4d.lnusepr
      (13 missing values generated)
      
    85 . gen l5dlnusepr=l5d.lnusepr
      (13 missing values generated)
      
    86 . gen l6dlnusepr=l6d.lnusepr
      (13 missing values generated)
      
    87 . gen l7dlnusepr=l7d.lnusepr
      (13 missing values generated)
      
    88 . gen l8dlnusepr=l8d.lnusepr
      (13 missing values generated)
      
    89 . gen l9dlnusepr=l9d.lnusepr
      (13 missing values generated)
      
    90 . gen l10dlnusepr=l10d.lnusepr
      (13 missing values generated)
      
    91 . gen l11dlnusepr=l11d.lnusepr
      (13 missing values generated)
      
    92 . gen l12dlnusepr=l12d.lnusepr
      (13 missing values generated)
      
    93 . gen l24dlnusepr=l24d.lnusepr
      (25 missing values generated)
      
    94 . 
    95 . gen dh2lnflnonfarm = lnflnonfarm - l2.lnflnonfarm
      (14 missing values generated)
      
    96 . gen dh4lnflnonfarm = lnflnonfarm - l4.lnflnonfarm
      (16 missing values generated)
      
    97 . gen dh6lnflnonfarm = lnflnonfarm - l6.lnflnonfarm
      (18 missing values generated)
      
    98 . 
    99 . /*
      > *h=2
      > 
      > gsreg dh2lnflnonfarm l3dlnflnonfarm l6dlnflnonfarm l9dlnflnonfarm ///
      >           l3dlnfllf l6dlnfllf l9dlnfllf ///
      >           l3dlnusepr l6dlnusepr l9dlnusepr if tin(1990m1,2019m12), ///
      >         ncomb(1,8) aic outsample(24) fix(m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11) 
      > ///
      >         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnh2) re
      > place
      > 
      > /*
      > dh2lnflnonfarm l6dlnflnonfarm l9dlnflnonfarm l3dlnfllf l6dlnfllf l3dlnusepr l
      > 6dlnusepr
      >         m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11
      >  */
      > 
      > *h=4
      > 
      > gsreg dh4lnflnonfarm l6dlnflnonfarm l9dlnflnonfarm l12dlnflnonfarm ///
      >           l6dlnfllf l9dlnfllf l12dlnfllf ///
      >           l6dlnusepr l9dlnusepr l12dlnusepr if tin(1990m1,2019m12), ///
      >         ncomb(1,8) aic outsample(24) fix(m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11) 
      > ///
      >         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnh4) re
      > place
      > 
      > /*
      > dh4lnflnonfarm l6dlnflnonfarm l9dlnflnonfarm l12dlnflnonfarm l6dlnfllf l9dlnf
      > llf
      >         l6dlnusepr l9dlnusepr m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11
      > */
      > 
      > *h=6
      > 
      > gsreg dh4lnflnonfarm l6dlnflnonfarm l9dlnflnonfarm l12dlnflnonfarm l24dlnflno
      > nfarm ///
      >           l6dlnfllf l9dlnfllf l12dlnfllf l24dlnfllf ///
      >           l6dlnusepr l9dlnusepr l12dlnusepr l24dlnusepr if tin(1990m1,2019m12
      > ), ///
      >         ncomb(1,8) aic outsample(24) fix(m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11) 
      > ///
      >         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnh6) re
      > place
      > 
      > /*
      > dh6lnflnonfarm l6dlnflnonfarm l9dlnflnonfarm l12dlnflnonfarm l6dlnfllf l9dlnf
      > llf
      >         l6dlnusepr l9dlnusepr m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11
      > */
      > 
      > *h2
      > scalar drop _all
      > quietly forval w=48(12)180 {
      > gen pred=.
      > gen nobs=.
      >         forval t=565/720 { 
      >         gen wstart=`t'-`w'
      >         gen wend=`t'-1
      >         reg d.lnflnonfarm l(6,9)d.lnflnonfarm l(3,6)d.lnfllf l(3,6)d.lnusepr 
      > ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 ///
      >                 if date>=wstart & date<=wend
      >         replace nobs=e(N) if date==`t'
      >         predict ptemp
      >         replace pred=ptemp if date==`t'
      >         drop ptemp wstart wend
      >         }
      > gen errsq=(pred-d.lnflnonfarm)^2
      > summ errsq
      > scalar RWrmse`w'=r(mean)^.5
      > summ nobs
      > scalar RWminobs`w'=r(min)
      > scalar RWmaxobs`w'=r(max)
      > drop errsq pred nobs
      > }
      > scalar list
      > /*
      > RWmaxobs96 =         96
      > RWminobs96 =         96
      > RWrmse96 =  .00372845
      > */
      > scalar rwrmseH2 = .00372845
      > 
      > *h4
      > scalar drop _all
      > quietly forval w=48(12)180 {
      > gen pred=.
      > gen nobs=.
      >         forval t=565/720 { 
      >         gen wstart=`t'-`w'
      >         gen wend=`t'-1
      >         reg d.lnflnonfarm l(6,9,12)d.lnflnonfarm l(6,9)d.lnfllf l(6,9)d.lnuse
      > pr ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 ///
      >                 if date>=wstart & date<=wend
      >         replace nobs=e(N) if date==`t'
      >         predict ptemp
      >         replace pred=ptemp if date==`t'
      >         drop ptemp wstart wend
      >         }
      > gen errsq=(pred-d.lnflnonfarm)^2
      > summ errsq
      > scalar RWrmse`w'=r(mean)^.5
      > summ nobs
      > scalar RWminobs`w'=r(min)
      > scalar RWmaxobs`w'=r(max)
      > drop errsq pred nobs
      > }
      > scalar list
      > /*
      > RWmaxobs96 =         96
      > RWminobs96 =         96
      > RWrmse96 =  .00373399
      > */
      > scalar rwrmseH4 = .00373399
      > 
      > *h6
      > scalar drop _all
      > quietly forval w=48(12)180 {
      > gen pred=.
      > gen nobs=.
      >         forval t=565/720 { 
      >         gen wstart=`t'-`w'
      >         gen wend=`t'-1
      >         reg d.lnflnonfarm l(6,9,12)d.lnflnonfarm l(6,9)d.lnfllf l(6,9)d.lnuse
      > pr ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 ///
      >                 if date>=wstart & date<=wend
      >         replace nobs=e(N) if date==`t'
      >         predict ptemp
      >         replace pred=ptemp if date==`t'
      >         drop ptemp wstart wend
      >         }
      > gen errsq=(pred-d.lnflnonfarm)^2
      > summ errsq
      > scalar RWrmse`w'=r(mean)^.5
      > summ nobs
      > scalar RWminobs`w'=r(min)
      > scalar RWmaxobs`w'=r(max)
      > drop errsq pred nobs
      > }
      > scalar list
      > /*
      > RWmaxobs96 =         96
      > RWminobs96 =         96
      > RWrmse96 =  .00373399
      > */
      > 
      > scalar rwrmseH2 = .00372845
      > scalar rwrmseH4 = .00373399
      > scalar rwrmseH6 = .00373399
      > 
      > *h2
      > reg dh2lnflnonfarm l(6,9)d.lnflnonfarm l(3,6)d.lnfllf l(3,6)d.lnusepr ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 if tin(2012m1,2019m12)
      > predict pd
      > gen pflnonfarm=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd) if date==tm(2020m2)
      > gen ub1=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd+1*rwrmseH2) if date==tm(202
      > 0m2)
      > gen lb1=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd-1*rwrmseH2) if date==tm(202
      > 0m2)
      > gen ub2=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd+2*rwrmseH2) if date==tm(202
      > 0m2)
      > gen lb2=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd-2*rwrmseH2) if date==tm(202
      > 0m2)
      > gen ub3=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd+3*rwrmseH2) if date==tm(202
      > 0m2)
      > gen lb3=exp((rwrmseH2^2)/2)*exp(l2.lnflnonfarm+pd-3*rwrmseH2) if date==tm(202
      > 0m2)
      > drop pd
      > 
      > 
      > *h4
      > reg dh4lnflnonfarm l(6,9,12)d.lnflnonfarm l(6,9)d.lnfllf l(6,9)d.lnusepr ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 if tin(2012m1,2019m12) 
      > predict pd
      > replace pflnonfarm=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd) if date==tm(202
      > 0m4)
      > replace ub1=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd+1*rwrmseH4) if date==tm
      > (2020m4)
      > replace lb1=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd-1*rwrmseH4) if date==tm
      > (2020m4)
      > replace ub2=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd+2*rwrmseH4) if date==tm
      > (2020m4)
      > replace lb2=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd-2*rwrmseH4) if date==tm
      > (2020m4)
      > replace ub3=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd+3*rwrmseH4) if date==tm
      > (2020m4)
      > replace lb3=exp((rwrmseH4^2)/2)*exp(l4.lnflnonfarm+pd-3*rwrmseH4) if date==tm
      > (2020m4)
      > drop pd
      > 
      > *h6
      > reg dh6lnflnonfarm l(6,9,12)d.lnflnonfarm l(6,9)d.lnfllf l(6,9)d.lnusepr ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 if tin(2012m1,2019m12)
      > predict pd 
      > replace pflnonfarm=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd) if date==tm(202
      > 0m6)
      > replace ub1=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd+1*rwrmseH6) if date==tm
      > (2020m6)
      > replace lb1=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd-1*rwrmseH6) if date==tm
      > (2020m6)
      > replace ub2=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd+2*rwrmseH6) if date==tm
      > (2020m6)
      > replace lb2=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd-2*rwrmseH6) if date==tm
      > (2020m6)
      > replace ub3=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd+3*rwrmseH6) if date==tm
      > (2020m6)
      > replace lb3=exp((rwrmseH6^2)/2)*exp(l6.lnflnonfarm+pd-3*rwrmseH6) if date==tm
      > (2020m6)
      > drop pd
      > 
      > replace pflnonfarm=fl_nonfarm if date==tm(2019m12)
      > replace ub1=fl_nonfarm if date==tm(2019m12)
      > replace ub2=fl_nonfarm if date==tm(2019m12)
      > replace ub3=fl_nonfarm if date==tm(2019m12)
      > replace lb1=fl_nonfarm if date==tm(2019m12)
      > replace lb2=fl_nonfarm if date==tm(2019m12)
      > replace lb3=fl_nonfarm if date==tm(2019m12)
      > 
      > 
      > *Table
      > list month pflnonfarm lb3 lb2 lb1 ub1 ub2 ub3 if tin(2019m12,2020m6)
      > *ARDL Fan Chart
      > twoway (tsrline ub3 ub2 if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsrline ub2 ub1 if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline ub1 pflnonfarm if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline pflnonfarm lb1 if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline lb1 lb2 if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline lb2 lb3 if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsline fl_nonfarm pflnonfarm if tin(2019m1,2020m6) , ///
      >         lcolor(gs12 teal) lwidth(medthick medthick) ///
      >         lpattern(solid longdash)) , scheme(s1mono) legend(off) ///
      >         title("Florida Nonfarm Employment"  ///
      >         "Forecast Fan Chart for 2, 4, and 6 Month Horizons") legend(off) ///
      >         xtitle("") ylabel(,grid)  ///
      >         note("Launch date is 2020m2" "Bands at 1, 2, and 3 sigma") ///
      >         saving("ardl.gph", replace)
      >         
      > graph export "ardl.png", replace
      >  
      > /*
      > Question 2
      > */
      > 
      > gsreg dlnflnonfarm l2dlnflnonfarm l4dlnflnonfarm l6dlnflnonfarm ///
      >         l8dlnflnonfarm l10dlnflnonfarm l12dlnflnonfarm l24dlnflnonfarm ///
      >         l3dlnflnonfarm l5dlnflnonfarm l7dlnflnonfarm l9dlnflnonfarm l11dlnfln
      > onfarm ///
      >         if tin(1990m1,2019m12), ///
      >         ncomb(1,8) aic outsample(24) fix(m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11) 
      > ///
      >         samesample nindex( -1 aic -1 bic -1 rmse_out) results(gsreg_dlnh4) re
      > place
      >         
      > /* 
      > dlnflnonfarm l3dlnflnonfarm l4dlnflnonfarm l5dlnflnonfarm l6dlnflnonfarm 
      >         l10dlnflnonfarm l12dlnflnonfarm l24dlnflnonfarm
      > */
      > 
      > 
      > scalar drop _all
      > quietly forval w=48(12)180 {
      > gen pred=.
      > gen nobs=.
      >         forval t=562/720 { 
      >         gen wstart=`t'-`w'
      >         gen wend=`t'-1
      >         reg d.lnflnonfarm l(3/6,10,12,24)d.lnflnonfarm ///
      >                 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 ///
      >                 if date>=wstart & date<=wend
      >         replace nobs=e(N) if date==`t'
      >         predict ptemp
      >         replace pred=ptemp if date==`t'
      >         drop ptemp wstart wend
      >         }
      > gen errsq=(pred-d.lnflnonfarm)^2
      > summ errsq
      > scalar RWrmse`w'=r(mean)^.5
      > summ nobs
      > scalar RWminobs`w'=r(min)
      > scalar RWmaxobs`w'=r(max)
      > drop errsq pred nobs
      > }
      > scalar list
      > 
      > /*
      > RWmaxobs108 =        108
      > RWminobs108 =        108
      > RWrmse108 =  .00355344
      > */
      > */
   100 . arima d.lnflnonfarm l(3,4,5,6,10,12,24)d.lnflnonfarm ///
      >         m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 if tin(1990m1,2019m12)
      
      (setting optimization to BHHH)
      Iteration 0:   log likelihood =  1419.1478  
      Iteration 1:   log likelihood =  1419.1478  
      
      ARIMA regression
      
      Sample:  1992m2 - 2019m12                       Number of obs     =        335
                                                      Wald chi2(18)     =    1963.87
      Log likelihood =  1419.148                      Prob > chi2       =     0.0000
      
      ------------------------------------------------------------------------------
      D.           |                 OPG
       lnflnonfarm |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
      -------------+----------------------------------------------------------------
      lnflnonfarm  |
       lnflnonfarm |
              L3D. |   .2358398   .0510963     4.62   0.000     .1356929    .3359867
              L4D. |   .1397295   .0527405     2.65   0.008       .03636     .243099
              L5D. |   .0796456   .0488336     1.63   0.103    -.0160664    .1753576
              L6D. |   .1211032   .0586843     2.06   0.039     .0060841    .2361223
             L10D. |   -.149653     .04423    -3.38   0.001    -.2363422   -.0629638
             L12D. |   .3689681   .0449547     8.21   0.000     .2808584    .4570778
             L24D. |    .153853   .0513259     3.00   0.003     .0532561    .2544498
                   |
                m1 |  -.0123309   .0019717    -6.25   0.000    -.0161955   -.0084664
                m2 |  -.0045874   .0020832    -2.20   0.028    -.0086704   -.0005045
                m3 |  -.0044397   .0019187    -2.31   0.021    -.0082002   -.0006792
                m4 |  -.0040325    .002363    -1.71   0.088    -.0086639    .0005989
                m5 |  -.0069423   .0022896    -3.03   0.002    -.0114299   -.0024548
                m6 |  -.0094868   .0019228    -4.93   0.000    -.0132554   -.0057182
                m7 |  -.0069193   .0018296    -3.78   0.000    -.0105052   -.0033334
                m8 |   .0003486   .0018303     0.19   0.849    -.0032387     .003936
                m9 |   .0011616   .0017654     0.66   0.511    -.0022984    .0046217
               m10 |   .0041933   .0016994     2.47   0.014     .0008625    .0075241
               m11 |   -.001529   .0018164    -0.84   0.400    -.0050892    .0020311
             _cons |   .0038359   .0013901     2.76   0.006     .0011114    .0065605
      -------------+----------------------------------------------------------------
            /sigma |   .0034993   .0000962    36.36   0.000     .0033107    .0036879
      ------------------------------------------------------------------------------
      Note: The test of the variance against zero is one sided, and the two-sided
            confidence interval is truncated at zero.
      
   101 . predict pnonfarm, dynamic(tm(2020m1))
      (option xb assumed; predicted values)
      (25 missing values generated)
      
   102 . predict mse, mse dynamic(mofd(tm(2020m1)))
      
   103 . gen totmse = mse if date==tm(2020m1)
      (371 missing values generated)
      
   104 . replace totmse = l.totmse+mse if date>tm(2020m1)
      (11 real changes made)
      
   105 . gen pnonfarma = fl_nonfarm if date==tm(2019m12)
      (371 missing values generated)
      
   106 . replace pnonfarma = l.pnonfarma*exp(pnonfarm+mse/2) if date>tm(2019m12)
      (12 real changes made)
      
   107 . 
   108 . gen ub1a = pnonfarma*exp(totmse^.5)
      (360 missing values generated)
      
   109 . gen ub2a = pnonfarma*exp(2*totmse^.5)
      (360 missing values generated)
      
   110 . gen ub3a = pnonfarma*exp(3*totmse^.5)
      (360 missing values generated)
      
   111 . gen lb1a = pnonfarma/exp(totmse^.5)
      (360 missing values generated)
      
   112 . gen lb2a = pnonfarma/exp(2*totmse^.5)
      (360 missing values generated)
      
   113 . gen lb3a = pnonfarma/exp(3*totmse^.5)
      (360 missing values generated)
      
   114 . 
   115 . replace ub1a=fl_nonfarm if date == tm(2019m12)
      (1 real change made)
      
   116 . replace ub2a=fl_nonfarm if date == tm(2019m12)
      (1 real change made)
      
   117 . replace ub3a=fl_nonfarm if date == tm(2019m12)
      (1 real change made)
      
   118 . replace lb1a=fl_nonfarm if date == tm(2019m12)
      (1 real change made)
      
   119 . replace lb2a=fl_nonfarm if date == tm(2019m12)
      (1 real change made)
      
   120 . replace lb3a=fl_nonfarm if date == tm(2019m12)
      (1 real change made)
      
   121 . 
   122 . twoway (tsrline ub3a ub2a if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsrline ub2a ub1a if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline ub1a pnonfarma if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline pnonfarma lb1a if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(65) lwidth(none) ) ///
      >         (tsrline lb1a lb2a if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(40) lwidth(none) ) ///
      >         (tsrline lb2a lb3a if tin(2019m1,2020m6), ///
      >         recast(rarea) fcolor(khaki) fintensity(20) lwidth(none) ) ///
      >         (tsline fl_nonfarm pnonfarma if tin(2019m1,2020m6) , ///
      >         lcolor(gs12 teal) lwidth(medthick medthick) ///
      >         lpattern(solid longdash)) , scheme(s1mono) legend(off) ///
      >         saving("ar.gph", replace)
      (file ar.gph saved)
      
   123 .         
   124 . graph export "ar.png", replace
      (file /Users/guslipkin/Documents/Spring2020/CAP 4763 ~ Time Series/Problem Sets
      > /Problem Set 6/ar.png written in PNG format)
      
   125 . 
