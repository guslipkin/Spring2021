t <- 10
c <- 1
d <- .05
base <- data.frame(time = 1:t,
cash = rep(c, times = t),
discount = rep(d, times = t))
moron <- base
me <- base
# cash
for(c in 1:10) {
base$cash <- c
oldDiff <- sum(c)
# discount
for(d in seq(0, 1, by = .01)) {
base$discount <- d
for(t in 1:nrow(base)) {
miniBase <- base[1:t,]
totalMoron <- sum(miniBase$cash / ((1 + miniBase$discount)^miniBase$time))
totalMe <- ifelse(t == 10,
0,
sum(base[(t+1):nrow(base),"cash"]) / ((1+d)^(t+1)))
diff <- abs(totalMe - totalMoron)
if(!is.na(totalMoron) & !is.na(totalMe) & diff < oldDiff) {
diffText <- paste("t:", t, "c:", c, "d:", d, "Diff:", diff)
diff <- oldDiff
}
}
print(diffText)
}
}
library(tidyverse)
library(scales)
library(sf)
library(readr)
finalDataset <- read_csv("../data/finalDataset.csv")
library(tidyverse)
library(scales)
library(sf)
library(readr)
finalDataset <- read_csv("../data/finalDataset.csv")
library(readr)
finalDataset <- read_csv(https://github.com/lzorrilla/final_project_SP2021/tree/master/data/finalDataset.csv)
library(readr)
finalDataset <- read.csv(getURL("https://github.com/lzorrilla/final_project_SP2021/tree/master/data/finalDataset.csv"))
library(RCurl)
install.packages("RCurl")
library(tidyverse)
library(scales)
library(sf)
library(RCurl)
library(readr)
finalDataset <- read.csv(getURL("https://github.com/lzorrilla/final_project_SP2021/tree/master/data/finalDataset.csv"))
finalDataset <- read_csv("finalDataset.csv")
library(tidyverse)
library(scales)
library(sf)
library(readr)
finalDataset <- read_csv("finalDataset.csv")
Dataset <- finalDataset %>%
mutate(sb_number = as.numeric(as.roman(SB)),
SB = fct_reorder(SB, sb_number),
NationalAnthem_Length_Seconds = as.numeric(NationalAnthem_Length_Seconds))
Dataset
crs = 102003
Dataset %>%
mutate(Win_Loss_Winner_Ratio = (finalDataset$RecordWinner_win +
(finalDataset$RecordWinner_tie*0.5))/
(finalDataset$RecordWinner_lose + (finalDataset$RecordWinner_tie*0.5))) %>%
count(Win_Loss_Winner_Ratio)  %>%
arrange(desc(n)) %>%
head(3)
Dataset %>%
mutate(Win_Loss_Loser_Ratio = (finalDataset$RecordLoser_win +
(finalDataset$RecordLoser_tie*0.5))/
(finalDataset$RecordLoser_lose + (finalDataset$RecordLoser_tie*0.5)))%>%
count(Win_Loss_Loser_Ratio)  %>%
arrange(desc(n)) %>%
head(3)
ggplot(data = Dataset, aes(x = SB, y = Distance_Winner, fill =  Distance_Winner)) +
geom_col()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Distance Traveled by the Winner per Super Bowl",
y = "Mileage Traveled",
x = "Super Bowl",
fill = "Distance of Winner",
caption = "Distance in Miles") +
theme(legend.position ="bottom")
Dataset %>%
group_by(SB) %>%
filter(Distance_Winner == max(Distance_Winner))%>%
arrange(desc(Distance_Winner)) %>%
select(Date, SB, Winner, Loser, Distance_Winner, City)%>%
head(5)
Dataset %>%
group_by(SB) %>%
filter(Distance_Winner == min(Distance_Winner)) %>%
arrange(Distance_Winner)%>%
select(Date, SB, Winner, Loser, Distance_Winner, City)%>%
head(5)
Dataset %>%
summarise(mean_distance = mean(Distance_Winner, na.rm=T))
ggplot(data = Dataset, aes(x = SB, y = Distance_Loser, fill =  Distance_Loser)) +
geom_col()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Distance Traveled by the Loser per Super Bowl", y = "Mileage Traveled", x = "Super Bowl", fill = "Distance of Loser", caption = "Distance in Miles") +   theme(legend.position ="bottom")
Dataset %>%
group_by(SB) %>%
filter(Distance_Loser == max(Distance_Loser))%>%
arrange(desc(Distance_Loser)) %>%
select(Date, SB, Winner, Loser, Distance_Loser, City)%>%
head(5)
Dataset %>%
group_by(SB) %>%
filter(Distance_Loser == min(Distance_Loser))%>%
arrange(Distance_Loser) %>%
select(Date, SB, Winner, Loser, Distance_Loser, City)%>%
head(5)
Dataset%>%
summarise(mean_Distance = mean(Distance_Loser))
ggplot(data = Dataset, aes(x = Distance_Winner, y = Distance_Loser)) +
geom_point()+
geom_smooth(method = "lm", col = "red")+
theme_minimal() +
labs(title = "Distances between Winners and Losers",
y = "Distance traveled by the Loser (Miles)",
x = "Distance traveled by the Winner (Miles)")
lm1 <- lm( Distance_Loser~ Distance_Winner, Dataset)
summary(lm1)
total <- Dataset%>%
mutate(totalpoints = LosingPts + WinningPts)
total%>%
summarise(Average_Wind_MPH = mean(Wind, na.rm= TRUE))
ggplot(data = total, aes(x = Wind, y = totalpoints))+
geom_point()+
geom_smooth(method = "lm", col = "red")+
labs(title = "Wind Speed in Relation to Total Points Scored",
y = "Total Points Scored in the Super Bowl",
x = "Wind Speed in MPH")
lm2<- lm(totalpoints~Wind, total)
summary(lm2)
total%>%
summarise(Average_Elevation_Feet = mean(Elevation, na.rm= TRUE))
ggplot(data = total, aes(x = Elevation, y = totalpoints ))+
geom_point()+
geom_smooth(method = "lm", col = "red")+
labs(title = "Elevation in Relation to Total Points Scored",
caption = "Elevation in Feet, above Sea Level",
y = "Total Points Scored in the Super Bowl",
x = "Elevation")
lm3<- lm(totalpoints~Elevation, total)
summary(lm3)
total%>%
summarise(Average_Kickoff_Temperature = mean(Kick_off_temp, na.rm= TRUE))
ggplot(data = total, aes(x = Kick_off_temp, y = totalpoints ))+
geom_point()+
geom_smooth(method = "lm", col = "red")+
labs(title = "Temperature in Relation to Total Points Scored",
caption = "Temperature in Degrees Fahrenheit.",
y = "Total Points Scored in the Super Bowl",
x = "Kick Off Temperature")
lm4<- lm(totalpoints~Kick_off_temp, total)
summary(lm4)
ggplot(data = Dataset) + geom_col(aes(x = SB, y = Attendance, fill = Attendance)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Attendance Rate per Super Bowl",
x = "Super Bowl") +
theme(legend.position ="bottom") +
scale_fill_gradient(breaks = c(25000, 65000, 103985), high = "#009245", low = "#FCEE21")
Dataset %>%
summarise(max_attend = max(Attendance),
min_attend = min(Attendance),
mean_attend = mean(Attendance))
Dataset%>%
filter(Attendance == max(Attendance))%>%
select(SB, Date, Attendance, Winner, QBWinner, Loser, QBLoser, Stadium)
Dataset%>%
filter(Attendance == min(Attendance))%>%
select(SB, Date, Attendance, Winner, QBWinner, Loser, QBLoser, Stadium)
Dataset%>%
filter(SB != "LV") %>%
filter (Attendance == min(Attendance))%>%
select(SB, Date, Attendance, Winner, QBWinner, Loser, QBLoser, Stadium)
ggplot(data = Dataset, aes(x = Kick_off_temp, y = Attendance)) +
geom_point()+
geom_smooth(method = "lm", col = "red")+
theme_minimal() +
labs(title = "Attendance in Relation to Kick Off Temperature",
caption = "Temperature in degrees Fahrenheit",
y = "Attendance",
x = "Kick Off Temps")
lm5 <- lm(Attendance ~ Kick_off_temp, Dataset)
summary(lm5)
Dataset %>%
group_by(SB) %>%
select(NationalAnthem_Length_Seconds) %>%
arrange(desc(NationalAnthem_Length_Seconds))%>%
ggplot() +
geom_col(aes(x = SB, y = NationalAnthem_Length_Seconds), fill = "#000080")+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "National Anthem Length per Super Bowl",
caption = "Length in Minutes",
y = "National Anthem Length",
x = "Super Bowl")
Dataset %>%
group_by(SB) %>%
filter(NationalAnthem_Length_Seconds == max(NationalAnthem_Length_Seconds))%>%
arrange(desc(NationalAnthem_Length_Seconds))%>%
select(Date, SB, Winner, Loser, NationalAnthem_Length_Seconds)%>%
head(2)
Dataset %>%
group_by(SB) %>%
filter(NationalAnthem_Length_Seconds == min(NationalAnthem_Length_Seconds))%>%
select(Date, SB, Winner, Loser, NationalAnthem_Length_Seconds)%>%
head(2)
Dataset %>%
ggplot() +
geom_col(aes(x = SB, y = NationalAnthem_Length_Seconds, fill = Kick_off_temp)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "National Anthem per Super Bowl",
y = "National Anthem Length",
x = "Super Bowl",
caption = "Temperature in degrees Fahrenheit",
fill = "Temperature Levels")+
theme(legend.position ="bottom")+
scale_fill_gradient(high = "red", low = "blue")
Dataset %>%
filter(Kick_off_temp >= 70) %>%
select(Date, SB, Winner, Loser, City, NationalAnthem_Length_Seconds, Kick_off_temp, Stadium_Type) %>%
arrange(desc(Kick_off_temp)) %>%
head(5)
ggplot(data = Dataset, aes(x = Kick_off_temp, y = NationalAnthem_Length_Seconds)) +
geom_point()+
geom_smooth(method = "lm", col = "red")+
theme_minimal() +
labs(title = "National Anthem Length in Relation to Kick Off Temperature",
y = "National Anthem Length in Seconds",
x = "Kick Off Temperatures",
caption = "Temperature in degrees Fahrenheit")
lm6 <- lm(NationalAnthem_Length_Seconds ~ Kick_off_temp, Dataset)
summary(lm6)
cointoss <- Dataset%>%
mutate(Coin_Toss_Results = if_else(Coin_Toss == 1, "Coin toss was won", "Coin toss was lost"))
cointoss %>%
count(Coin_Toss_Results) #There are more occurrences where the winner lost the coin toss
ggplot(data = cointoss)+
geom_bar(aes(x= Coin_Toss_Results, fill = Coin_Toss_Results))+
theme_minimal() +
labs(title = "Coin Toss Results by the Winner in Relation to Games",
y = "Total Number of Games",
x = "Coin Toss Outcome",
fill = "Results")
Dataset %>%
group_by(PointDifference) %>%
select(SB, Winner, Loser, Stadium, PointDifference) %>%
arrange(desc(PointDifference))%>%
head(5)
Dataset %>%
ggplot(aes(x = SB, y = PointDifference, group = 1)) +
geom_point() +
geom_line() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
RefDifference <- finalDataset %>%
group_by(Date, SB, Referee) %>%
summarise(diff = (WinningPts - LosingPts)/n()) %>%
arrange(desc(diff))%>%
head(5)
RefDifference
Dataset %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference )) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
Dataset
Dataset
library(stringr)
Dataset
str_split(Dataset$Date, "-")
str_split(Dataset$Date, "-")[3]
str_split(Dataset$Date, "-")[[3]]
str_split(Dataset$Date, "-")[,3]
str_split(Dataset$Date, "-")[][3]
str_split(Dataset$Date, "-")
str_split(Dataset$Date, "-")[[]][3]
str_split(Dataset$Date, "-")[][[3]]
str_split(Dataset$Date, "-")
str_match(Dataset$Date, "-")
str_extract(Dataset$Date, "-[0-9]{2}")
str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-")
str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", "")
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""), year = ifelse(year > 21, paste0("19", year), paste0("20", year)))
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year))
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
# year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year))
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
year = year - (year %% 10))
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
year = year - (year %% 10)) %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference, fill = year )) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
decade = year - (year %% 10)) %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference, fill = decade)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
decade = year - (year %% 10)) %>%
group_by(decade) %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference, fill = decade)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
decade = year - (year %% 10)) %>%
group_by(decade) %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference, fill = decade)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN") +
scale_fill_binned()
library(stringr)
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
decade = as.factor(year - (year %% 10))) %>%
group_by(decade) %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference, fill = decade)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
library(stringr)
Dataset %>%
mutate(year = str_replace_all(str_extract(Dataset$Date, "-[0-9]{2}"), "-", ""),
year = ifelse(year > 21, paste0("19", year), paste0("20", year)),
year = as.numeric(year),
decade = as.factor(year - (year %% 10))) %>%
# group_by(decade) %>%
ggplot() +
geom_col(aes(x = SB, y = PointDifference, fill = decade)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Super Bowl", y = "Point Differential",title = "Point Differential across each Super Bowl", caption = "Data retrieved from ESPN")
ggplot(data = Dataset) + geom_col(aes(x = SB, y = Attendance, fill = Attendance)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Attendance Rate per Super Bowl",
x = "Super Bowl") +
theme(legend.position ="bottom") +
scale_fill_gradient(breaks = c(25000, 65000, 103985), high = "#009245", low = "#FCEE21") +
ylim(c(24000,105000))
ggplot(data = Dataset) + geom_col(aes(x = SB, y = Attendance, fill = Attendance)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Attendance Rate per Super Bowl",
x = "Super Bowl") +
theme(legend.position ="bottom") +
scale_fill_gradient(breaks = c(25000, 65000, 103985), high = "#009245", low = "#FCEE21") +
ylim(c(,105000))
ggplot(data = Dataset) + geom_col(aes(x = SB, y = Attendance, fill = Attendance)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Attendance Rate per Super Bowl",
x = "Super Bowl") +
theme(legend.position ="bottom") +
scale_fill_gradient(breaks = c(25000, 65000, 103985), high = "#009245", low = "#FCEE21") +
ylim(c(0,105000))
ggplot(data = Dataset) + geom_col(aes(x = SB, y = Attendance, fill = Attendance)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Attendance Rate per Super Bowl",
x = "Super Bowl") +
theme(legend.position ="bottom") +
scale_fill_gradient(breaks = c(25000, 65000, 103985), high = "#009245", low = "#FCEE21") +
ylim(c(2400,105000))
ggplot(data = Dataset) + geom_col(aes(x = SB, y = Attendance, fill = Attendance)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Attendance Rate per Super Bowl",
x = "Super Bowl") +
theme(legend.position ="bottom") +
scale_fill_gradient(breaks = c(25000, 65000, 103985), high = "#009245", low = "#FCEE21")
